#ifndef MY_ABC_HERE
#define MY_ABC_HERE
#endif
/* Copyright (c) 2015 Synology Inc. All rights reserved. */

#ifndef _UAPI__SYNO_H_
#define _UAPI__SYNO_H_

/* syno_autoconf.h was generated by modified /scripts/kconfig/conf (MY_ABC_HERE) */
#ifndef __KERNEL__
#include <linux/syno_autoconf.h>
#endif

#ifndef LINUX_VERSION_CODE
#include <linux/version.h>
#endif
#define SYNO_HAVE_KERNEL_VERSION(a,b,c) (LINUX_VERSION_CODE >= KERNEL_VERSION((a),(b),(c)) )
#define SYNO_HAVE_GCC_VERSION(a,b) (__GNUC__ > (a) || (__GNUC__ == (a) && __GNUC_MINOR__ >= (b)))
#define SYNO_HAVE_GLIBC_VERSION(a,b) ( __GLIBC__ > (a) || (__GLIBC__ == (a) && __GLIBC_MINOR__ >= (b)))

/**
 * Dsc: Synology multimedia server feature. For indexing video, photo,
 *      music.
 * Ref: libsynosdk, lnxnetatalk, lnxsdk, rsync, samba, smbftpd
 */
#define SYNO_INDEX_SHARES		"photo,video,music"

/**
 * Dsc: This definition is used to enhance samba's performance.
 *      This modify should sync with samba
 */

/**
 * Dsc: This modify should sync with netatalk
 */
#define SYNO_EA

/**
 * Dsc: This modify should sync with samba
 */

#ifdef MY_ABC_HERE
#define SYNO_MAXPATH    4095
#define SYNO_MAXNAME    491
#endif


/**
 * Fix: DS20 bug #1405
 * Dsc: Avoid scan all inodes of ext3 while doing quotacheck
 */


/**
 * Fix: DS 2.0 #3046 #4286 #3063, LKP2.6.32 #70, #74
 * Dsc: this define is used to help SDK determind raid status.
 *      In raid0, this define is used to consist mdstatus with
 *      other raid disk. When reboot, even if raid0 has problem,
 *      we must pretend it can be assemble
 * IN : md.c include/linux/raid/md_u.h raid0.c, raid1.c
 */

/**
 * Dsc: recvfile syscall
 *      This modify should sync with samba
 */


#ifdef MY_ABC_HERE
#define SYNO_ARCHIVE_BIT
#if defined (F_CLEAR_ARCHIVE) || defined (F_SETSMB_ARCHIVE) || defined (F_SETSMB_HIDDEN) || \
	defined (F_SETSMB_SYSTEM) || defined (F_CLRSMB_ARCHIVE) || defined (F_CLRSMB_HIDDEN) || \
	defined (F_CLRSMB_SYSTEM) || defined (F_CLEAR_S3_ARCHIVE) || \
	defined (F_SETSMB_SPARSE) || defined (F_CLRSMB_SPARSE)
#error "Samba archive bit redefine."
#endif

#ifdef MY_ABC_HERE
#define SYNO_FS_SYNO_ACL

#if defined (F_CLRSMB_READONLY) || defined (F_SETSMB_READONLY) || \
	defined (F_CLRACL_INHERIT)  || defined (F_SETACL_INHERIT)  || \
	defined (F_CLRACL_OWNER_IS_GROUP) || defined (F_SETACL_OWNER_IS_GROUP)  || \
	defined (F_SETACL_SUPPORT) || defined (F_SETACL_SUPPORT)
#error "ACL archive bit redefine."
#endif /* ACL archive bit redefine. */
#endif /* MY_ABC_HERE */

#define SYNO_FCNTL_BASE             513
#define F_CLEAR_ARCHIVE             (SYNO_FCNTL_BASE + 0)
#define F_SETSMB_ARCHIVE            (SYNO_FCNTL_BASE + 1)
#define F_SETSMB_HIDDEN             (SYNO_FCNTL_BASE + 2)
#define F_SETSMB_SYSTEM             (SYNO_FCNTL_BASE + 3)
#define F_CLRSMB_ARCHIVE            (SYNO_FCNTL_BASE + 4)
#define F_CLRSMB_HIDDEN             (SYNO_FCNTL_BASE + 5)
#define F_CLRSMB_SYSTEM             (SYNO_FCNTL_BASE + 6)
#define F_CLEAR_S3_ARCHIVE          (SYNO_FCNTL_BASE + 7)

#ifdef MY_ABC_HERE
#define F_CLRSMB_READONLY           (SYNO_FCNTL_BASE + 8)
#define F_SETSMB_READONLY           (SYNO_FCNTL_BASE + 9)
#define F_CLRACL_INHERIT            (SYNO_FCNTL_BASE + 10)
#define F_SETACL_INHERIT            (SYNO_FCNTL_BASE + 11)
#define F_CLRACL_HAS_ACL            (SYNO_FCNTL_BASE + 12)
#define F_SETACL_HAS_ACL            (SYNO_FCNTL_BASE + 13)
#define F_CLRACL_SUPPORT            (SYNO_FCNTL_BASE + 14)
#define F_SETACL_SUPPORT            (SYNO_FCNTL_BASE + 15)
#define F_CLRACL_OWNER_IS_GROUP     (SYNO_FCNTL_BASE + 16)
#define F_SETACL_OWNER_IS_GROUP     (SYNO_FCNTL_BASE + 17)
#define F_SETSMB_SPARSE				(SYNO_FCNTL_BASE + 18)
#define F_CLRSMB_SPARSE				(SYNO_FCNTL_BASE + 19)
#define SYNO_FCNTL_LAST             F_CLRSMB_SPARSE
#else
#define F_SETSMB_SPARSE				(SYNO_FCNTL_BASE + 8)
#define F_CLRSMB_SPARSE				(SYNO_FCNTL_BASE + 9)

#define SYNO_FCNTL_LAST             F_CLRSMB_SPARSE
#endif /* MY_ABC_HERE */

#endif /* MY_ABC_HERE */


/**
 * Fix: <DSM> #40639
 * Dsc: Report to UI and suggest fsck if ext4 error was found.
 * Ref: synobios, synoscemd, lnxscemd-2.0
 */

/**
 * Fix: <DSM> #96809
 * Dsc: If checksum error is detected, try repair it by MD redundancy. If we failed
 *      to repair, report the file path to UI through synobios and scemd.
 */



/**
 * Fix: Related #14299, #14524
 * Dsc: Prevent harddisks spin-up currently from standby
 *      mode. Add small amount of delay between each two disks
 *      so they do not consume too much power.
 * IN : mvLinuxIalLib.c, mvSata.c, mvSata.h, drivers/ata/libata-core.c,
 *      drivers/ata/libata-scsi.c, include/linux/libata.h, drivers/ata/libata-eh.c, drivers/ata/sata_mv.c,
 *      drivers/ata/libata-sff.c, kernel/sysctl.c
 */

/**
 * Fix: #58858
 * Dsc: Apply 4 kernel patches obtained from apparmor-2.9 package
 *      Define symbol for userspace tools.
 *
 *      Commits:
 *      f0b66be UBUNTU: SAUCE: apparmor: Add the ability to mediate mount
 *      9d3ff86 apparmor: Fix quieting of audit messages for network mediation
 *      0a0398b UBUNTU: SAUCE: AppArmor: basic networking rules
 *      0b85059 UBUNTU: SAUCE: AppArmor: Add profile introspection file to interface
 */

/**
 * Dsc: USB copy support
 *      use port number 99 to indicate USBCOPY port
 */
#ifdef MY_ABC_HERE
#define USBCOPY_PORT_LOCATION 99
#endif /* MY_ABC_HERE */

/**
 * Dsc: For Internal SD Cardreader only.
 */
#ifdef MY_ABC_HERE
#define SDCOPY_PORT_LOCATION 98
#endif /* MY_ABC_HERE */

/**
 * Fix: DSM #23923, DSM #54272
 * Dsc: Report LVM or MD sector which be auto remapped
 *      through scemd and synobios
 * IN : synobios.c
 */


/**
 * Fix: #66096
 * Dsc: Let flashcache support 4KN disks
 */

/**
 * Fix: DSM #64152
 * Dsc: Avoiding checksum error when the power of disk is short brake and write cache is enabled.
 *      We need to send such event to userspace.
 */

/**
 * Fix: DSM #49926
 * Dsc: export disk sata error to user space through synobios and scemd
 */

/**
 * Fix: DSM #120036
 * Send synobios notification when oom killer is triggered
 */

/**
 * Fix: DSM #19665
 * Dsc: Add ECC notification support
 *		When ECC ram detect 1 bit error, it will correct this error automatically,
 *		but we still need a notification scheme let user know the error just occurred.
 */

/**
 * Fix: DSM #103889
 * Dsc: Add notification for unsupported SFP+
 */
#if defined (MY_DEF_HERE) && !defined (__ASSEMBLER__)
typedef enum
{
	SFP_NOTIFY_UNSET 			= 0,
	SFP_NOTIFY_NOT_SUPPORT_DROP	= 1,	/* Interface might drop. ex: ixgbe */
	SFP_NOTIFY_NOT_SUPPORT_WARN = 2		/* Driver report not support but it might still work */
} SYNO_SFP_UNSUPPORTED_NOTIFY_TYPE;
#endif /* MY_DEF_HERE */

/******************************* Scsi Driver **************************************/
/**
 * Fix: <Taipei> #3840
 * Dsc: Export disk scsi error to user space through synobios and scemd.
 */

#endif /* __SYNO_USER_H_ */
