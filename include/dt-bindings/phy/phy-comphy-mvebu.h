#ifndef MY_ABC_HERE
#define MY_ABC_HERE
#endif
#ifndef _DT_BINDINGS_PHY_COMPHY_MVEBU
#define _DT_BINDINGS_PHY_COMPHY_MVEBU

/* A lane is described by 4 fields:
 *      - bit 1~0 represent comphy polarity invert
 *      - bit 7~2 represent comphy speed
 *      - bit 11~8 represent unit index
 *      - bit 16~12 represent mode
 */
#if defined(MY_DEF_HERE)
/*
 *      - bit 17 represent comphy indication of clock source
 *      - bit 31~18 reserved
 */
#else /* MY_DEF_HERE */
/* 
 *      - bit 31~13 reserved
 */
#endif /* MY_DEF_HERE */

#define COMPHY_INVERT_OFFSET	0
#define COMPHY_INVERT_LEN	2
#define COMPHY_INVERT_MASK	COMPHY_MASK(COMPHY_INVERT_OFFSET, COMPHY_INVERT_LEN)
#define COMPHY_SPEED_OFFSET	(COMPHY_INVERT_OFFSET + COMPHY_INVERT_LEN)
#define COMPHY_SPEED_LEN	6
#define COMPHY_SPEED_MASK	COMPHY_MASK(COMPHY_SPEED_OFFSET, COMPHY_SPEED_LEN)
#define COMPHY_UNIT_ID_OFFSET	(COMPHY_SPEED_OFFSET + COMPHY_SPEED_LEN)
#define COMPHY_UNIT_ID_LEN	4
#define COMPHY_UNIT_ID_MASK	COMPHY_MASK(COMPHY_UNIT_ID_OFFSET, COMPHY_UNIT_ID_LEN)
#define COMPHY_MODE_OFFSET	(COMPHY_UNIT_ID_OFFSET + COMPHY_UNIT_ID_LEN)
#define COMPHY_MODE_LEN		5
#define COMPHY_MODE_MASK	COMPHY_MASK(COMPHY_MODE_OFFSET, COMPHY_MODE_LEN)
#if defined(MY_DEF_HERE)
#define COMPHY_CLK_SRC_OFFSET	(COMPHY_MODE_OFFSET + COMPHY_MODE_LEN)
#define COMPHY_CLK_SRC_LEN	1
#define COMPHY_CLK_SRC_MASK	COMPHY_MASK(COMPHY_CLK_SRC_OFFSET, COMPHY_CLK_SRC_LEN)
#endif /* MY_DEF_HERE */
#define COMPHY_DEF(mode, id, speed, invert)	\
	(((mode) << COMPHY_MODE_OFFSET) | ((id) << COMPHY_UNIT_ID_OFFSET) | \
	((speed) << COMPHY_SPEED_OFFSET) | ((invert) << COMPHY_INVERT_OFFSET))

#define COMPHY_MASK(offset, len)	(((1 << (len)) - 1) << (offset))

/* Macro the extract the mode from lane description */
#define COMPHY_GET_MODE(x)		(((x) & COMPHY_MODE_MASK) >> COMPHY_MODE_OFFSET)
/* Macro the extract the unit index from lane description */
#define COMPHY_GET_ID(x)		(((x) & COMPHY_UNIT_ID_MASK) >> COMPHY_UNIT_ID_OFFSET)
/* Macro the extract the speed from lane description */
#define COMPHY_GET_SPEED(x)		(((x) & COMPHY_SPEED_MASK) >> COMPHY_SPEED_OFFSET)
/* Macro the extract the polarity invert from lane description */
#define COMPHY_GET_POLARITY_INVERT(x)	(((x) & COMPHY_INVERT_MASK) >> COMPHY_INVERT_OFFSET)
#if defined(MY_DEF_HERE)
/* Macro the extract the clock source indication from lane description */
#define COMPHY_GET_CLK_SRC(x)		(((x) & COMPHY_CLK_SRC_MASK) >> COMPHY_CLK_SRC_OFFSET)
#endif /* MY_DEF_HERE */

/* Comphy unit index macro */
#define COMPHY_UNIT_ID0		0
#define COMPHY_UNIT_ID1		1
#define COMPHY_UNIT_ID2		2
#define COMPHY_UNIT_ID3		3

/* Comphy description macro with default speed and invert */
#define	COMPHY_UNUSED		0xFFFFFFFF
#define COMPHY_SATA0		COMPHY_DEF(COMPHY_SATA_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_SATA1		COMPHY_DEF(COMPHY_SATA_MODE,  COMPHY_UNIT_ID1, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_SGMII0		COMPHY_DEF(COMPHY_SGMII_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* SGMII 1G */
#define COMPHY_SGMII1		COMPHY_DEF(COMPHY_SGMII_MODE,  COMPHY_UNIT_ID1, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* SGMII 1G */
#define COMPHY_SGMII2		COMPHY_DEF(COMPHY_SGMII_MODE,  COMPHY_UNIT_ID2, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* SGMII 1G */
#define COMPHY_HS_SGMII0	COMPHY_DEF(COMPHY_HS_SGMII_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* SGMII 2.5G */
#define COMPHY_HS_SGMII1	COMPHY_DEF(COMPHY_HS_SGMII_MODE,  COMPHY_UNIT_ID1, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* SGMII 2.5G */
#define COMPHY_HS_SGMII2	COMPHY_DEF(COMPHY_HS_SGMII_MODE,  COMPHY_UNIT_ID2, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* SGMII 2.5G */
#define COMPHY_USB3H0		COMPHY_DEF(COMPHY_USB3H_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_USB3H1		COMPHY_DEF(COMPHY_USB3H_MODE,  COMPHY_UNIT_ID1, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_USB3D0		COMPHY_DEF(COMPHY_USB3D_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_PCIE0		COMPHY_DEF(COMPHY_PCIE_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_PCIE1		COMPHY_DEF(COMPHY_PCIE_MODE,  COMPHY_UNIT_ID1, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_PCIE2		COMPHY_DEF(COMPHY_PCIE_MODE,  COMPHY_UNIT_ID2, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_PCIE3		COMPHY_DEF(COMPHY_PCIE_MODE,  COMPHY_UNIT_ID3, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_RXAUI0		COMPHY_DEF(COMPHY_RXAUI_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_RXAUI1		COMPHY_DEF(COMPHY_RXAUI_MODE,  COMPHY_UNIT_ID1, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_XFI		COMPHY_DEF(COMPHY_XFI_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_SFI		COMPHY_DEF(COMPHY_SFI_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)
#define COMPHY_USB3		COMPHY_DEF(COMPHY_USB3_MODE,  COMPHY_UNIT_ID0, \
					COMPHY_SPEED_DEFAULT, COMPHY_POLARITY_NO_INVERT)	/* USB3 Host&Device */

#define COMPHY_SATA_MODE	0x1
#define COMPHY_SGMII_MODE	0x2	/* SGMII 1G */
#define COMPHY_HS_SGMII_MODE	0x3	/* SGMII 2.5G */
#define COMPHY_USB3H_MODE	0x4
#define COMPHY_USB3D_MODE	0x5
#define COMPHY_PCIE_MODE	0x6
#define COMPHY_RXAUI_MODE	0x7
#define COMPHY_XFI_MODE		0x8
#define COMPHY_SFI_MODE		0x9
#define COMPHY_USB3_MODE	0xa

/* Polarity invert macro */
#define COMPHY_POLARITY_NO_INVERT	0
#define COMPHY_POLARITY_TXD_INVERT	1
#define COMPHY_POLARITY_RXD_INVERT	2
#define COMPHY_POLARITY_ALL_INVERT	(COMPHY_POLARITY_TXD_INVERT | COMPHY_POLARITY_RXD_INVERT)

/* COMPHY speed macro */
#define COMPHY_SPEED_1_25G		0 /* SGMII 1G */
#define COMPHY_SPEED_3_125G		1 /* SGMII 2.5G */
#define COMPHY_SPEED_5_15625G		2 /* XFI 5G */
#define COMPHY_SPEED_10_3125G		3 /* XFI 10G */
#define COMPHY_SPEED_MAX		0x3F
/* The  default speed for IO with fixed known speed */
#define COMPHY_SPEED_DEFAULT		COMPHY_SPEED_MAX

/* Commands for comphy driver */
#if defined(MY_DEF_HERE)
#define COMPHY_COMMAND_DIGITAL_PWR_OFF		0x00000001
#define COMPHY_COMMAND_DIGITAL_PWR_ON		0x00000002
#define COMPHY_COMMAND_PCIE_WIDTH_1		0x00000003
#define COMPHY_COMMAND_PCIE_WIDTH_2		0x00000004
#define COMPHY_COMMAND_PCIE_WIDTH_4		0x00000005
#define COMPHY_COMMAND_PCIE_WIDTH_UNSUPPORT	0x00000006
#define COMPHY_COMMAND_PCIE_IS_EP		0x00000007
#define COMPHY_COMMAND_SFI_RX_TRAINING		0x00000008
#else /* MY_DEF_HERE */
#define COMPHY_COMMAND_DIGITAL_PWR_OFF	0x00000001
#define COMPHY_COMMAND_DIGITAL_PWR_ON	0x00000002
#endif /* MY_DEF_HERE */

#endif /* _DT_BINDINGS_PHY_COMPHY_MVEBU */
