#ifndef MY_ABC_HERE
#define MY_ABC_HERE
#endif
/* Copyright (c) 2008 Synology Inc. All rights reserved. */

#ifndef __SYNO_H_
#define __SYNO_H_

/* syno_autoconf.h was generated by modified /scripts/kconfig/conf (MY_ABC_HERE)*/
#ifndef __KERNEL__
#include <linux/syno_autoconf.h>
#endif

#ifndef LINUX_VERSION_CODE
#include <linux/version.h>
#endif
#define SYNO_HAVE_KERNEL_VERSION(a,b,c) (LINUX_VERSION_CODE >= KERNEL_VERSION((a),(b),(c)) )
#define SYNO_HAVE_GCC_VERSION(a,b) (__GNUC__ > (a) || (__GNUC__ == (a) && __GNUC_MINOR__ >= (b)))
#define SYNO_HAVE_GLIBC_VERSION(a,b) ( __GLIBC__ > (a) || (__GLIBC__ == (a) && __GLIBC_MINOR__ >= (b)))

/******************************* Platform Arch ************************************/
/**
 * Dsc: This define is used for open synology related system call
 */

/**
 * Fix: linux-2.6.38 #269
 * Dsc: cedarview will reboot failed if it is not EFI. 
 * revert f70e957cda22d309c769805cbb932407a5232219
 */

/**
 * Fix: no bug entry
 * Dsc: support hibernate to disk
 */

/**
 * Fix: no bug entry
 * Dsc: support x86 wake up by rtc alarm match
 */
#if defined(MY_DEF_HERE)
#define SYNO_X86_AUTO_POWER_ON
#endif

/**
 * Fix: no bug entry
 * Dsc: support x86 system temperature r/w
 */

/**
 * Fix: no bug entry
 * Dsc: support pineview superio pins r/w.
 *      writable pins are defined in table writable_pin_setting[].
 */

/**
 * Fix: no bug entry
 * Dsc: support flash partitioning for Evansport
 */

/**
 * Fix: no bug entry
 * Dsc: GPIO functions for Evansport
 */

/**
 * Fix: DSM #43450
 * Dsc: Power-Off Sequence For Evansport, sending the command to MicroP
 * IN : arch/x86/kernel/reboot.c
 */
#if defined(MY_ABC_HERE) && defined(CONFIG_ARCH_GEN3)

#ifdef MY_ABC_HERE
#define SYNO_EVANSPORT_TTYS1_PORT	0x2F8
#define SYNO_EVANSPORT_SET8N1		0x3
#define SYNO_EVANSPORT_SHUTDOWN_CMD	0x31
#define SYNO_EVANSPORT_TXR		0
#define SYNO_EVANSPORT_LCR		3
#endif
#endif

/**
 * Fix: DSM #43138
 * Dsc: Export the symbol intelce_get_board_type
 * in : arch/x86/pci/intel_media_proc_gen3.c kernel/irq/irqdesc.c
 */

/**
 * Fix: #47018, #47019
 * Dsc: Force the smbd processes to be non-preemptive
 * in : kernel/sched.c
 */

/**
 * Fix: #47090, #48801
 * Dsc: Workaround for the issue that wol config sometimes is not valid
 * in : drivers/net/ethernet/intel/e1000/e1000_main.c
 */

/**
 * Fix: #48803
 * Dsc: Workaround for the issue that route init might fail with iptable enabled
 * in : net/ipv4/route.c
 */

/**
 * Fix: no bug entry
 * Dsc: fix on board usb flash device name as "synoboot"
 */

/**
 *  Fix: DSM #26025 
 *  Dsc: Dynamic module installation is also related to MY_ABC_HERE.
 *       In the system with this feature. The boot devices are like the ones of x86. 
 *       Two blocks of flash are involved. A smaller one stores U-boot while the other one 
 *       contains the patch file, zImage, and rd.bin.
 *       The #if condition of MY_ABC_HERE has been changed to exclude 
 *       the PPC85XX platforms to fullfill it.
 */
#if !defined(CONFIG_SYNO_MPC85XX_COMMON)
#define SYNO_USB_FLASH_DEVICE_INDEX 255
#define SYNO_USB_FLASH_DEVICE_NAME  "synoboot"
#define SYNO_USB_FLASH_DEVICE_PATH  "/dev/synoboot"
/**
 * See bug #26535, #22204, #21688, this is a workaround for factory mis-use 0xF401 in bromolow & pineview as synoboot device
 * We fix #22204, #21688 first, then create #26535, so further workaround is required
 */
#if defined(MY_DEF_HERE)
#define IS_SYNO_USBBOOT_ID_VENDOR(VENDOR) (0xF400 == (VENDOR) || 0xF401 == (VENDOR))
#define IS_SYNO_USBBOOT_ID_PRODUCT(PRODUCT) (0xF400 == (PRODUCT) || 0xF401 == (PRODUCT))
#else
#define IS_SYNO_USBBOOT_ID_VENDOR(VENDOR) (0xF400 == (VENDOR))
#define IS_SYNO_USBBOOT_ID_PRODUCT(PRODUCT) (0xF400 == (PRODUCT))
#endif
/**
 * Fix: no bug entry
 * Dsc: Avoid on board usb flash to be mounted by user.
 *      if user want to mount "synoboot" partition, 
 *      user need to echo "1" to /proc/sys/kernel/syno_install_flag first.
 */
#endif /*not CONFIG_SYNO_MPC85XX_COMMON (not PPC platforms)*/

/**
 * Fix: no bug entry
 * Dsc: support pineview lpc pins r/w to control sata led
 *      writable pins are defined in table writable_pin[]
 */
#if defined(MY_DEF_HERE) && !defined(MY_DEF_HERE)
#define SYNO_PCH_GPIO_CTRL
#endif

/**
 * Fix: no bug entry
 * Dsc: support reading CPU core temperature
 */

/**
 * Dsc: Let 6281 BSP can use sata_mv to drive the soc sata controller
 */
#if defined(CONFIG_ARCH_FEROCEON) && defined(CONFIG_SATA_MV)
#define SYNO_6281_SOC_USE_OPENSOURCE_SATA
#endif

/**
 * Dsc: Let 6281 soc register before 7042.
 */

/**
 * Dsc: Supporting EUP standby mode control.
 * Switch EUP standby mode via superI/O.
 */

/**
 * Dsc: Using synobios to determine HW could or not fully support EUP.
 * It means wake on LAN and auto poweron can both works fine in EUP mode.
 */

/**
 * Dsc: Support HA Active-Active project.
 * We need to change synoboot from USB to SATA DOM.
 */
#if defined(MY_DEF_HERE)
#define SYNO_SATA_DOM_VENDOR_SAMPLE_RUN_2	"SATADOM "
#define SYNO_SATA_DOM_MODEL_SAMPLE_RUN_2	"D150SH"
#define SYNO_SATA_DOM_VENDOR	"SATADOM-"
#define SYNO_SATA_DOM_MODEL	"TYPE D 3SE"
#endif

/******************************* Kernel Core **************************************/
/**
 * Fix: DSM bug #35477, #34708, #35774
 * Dsc: Disable RCU cpu stall detector, just like what we did in kernel 2.6.32
 */

/**
 * Fix: DS20 bug #1454
 * Dsc: Keeps UTC time in Kernel and RTC, donot wrap time.
 *      our user space code will handle this.
 */

/**
 * Dsc: Set memory overcommit policy to overcommit to fix the fork error problem
 */

/**
 * Fix: DSM 3.1 bug #19092
 * Dsc: Don't print message while cpu frequency changing 
 * IN : arch/arm/mach-feroceon-kw/cpufreq.c
 */

/**
 * Fix: DSM bug #21036 #37562
 * Dsc: Do not show nowait page allocation fail warning to prevent 
 *      QC team panic when they stress new platform.
 */

/**
 * Fix: Linux-2.6.38 #241 RX packets drop is increasing
 * Dsc: rx_dropped counts packets dropped by driver "and kernel core"
 *      this define will let it only record the packets dropped by driver
 *      please refer to caf586e5, 8990f468a
 */

/**
 * Fix: <DSM> #65293
 * Dsc: Keep soft lockup detector triggered in limited times.
 */
#ifdef MY_ABC_HERE
#define SYNO_SOFTLOCKUP_COUNTER_MAX 10
#endif

/******************************* Bootloader ***************************************/
/**
 * Dsc: Pass hardware version from uboot or other boot loader.
 *      So user mode can get the hardware version by using the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_hw_version
 */

/**
 * Dsc: Pass hardware revision from uboot or other boot loader.
 *      So user mode can get the hardware version by using the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_hw_revision
 */

/**
 * Dsc: The HD probing delay is executed based on the HD port 
 *      originallly. However, we have cases that there are some
 *      ports not used for internal hardisk. To reduce the delay
 *      probing time, a kernel environment variable "ihd_num" is
 *      defined.
 * Yet: arch/arm/plat-feroceon/mv_hal/sata/CoreDriver/mvSata.c
 *      drivers/ata/mvSata/mvSata.c
 *      drivers/ata/mvSata_4_2_2/CoreDriver/mvSata.c
 */

/**
 * Ref: LKP2.6.32 #112
 * Dsc: Just parse bootloader command to judge how many network 
 *      interface used. A kernel environment variable "netif_num" 
 *      is defined.
 * Yet: arch/arm/plat-feroceon/mv_drivers_lsp/mv_network/mv_ethernet/mv_netdev.c
 *      arch/arm/mach-feroceon-kw/kw_family/ctrlEnv/mvCtrlEnvLib.c
 */

/**
 * Fix: #27837, #27954
 * Dsc: Turn on/off the leds of the e1000e NIC
 * Yet: The implementation of this fix has been moved to project intel-e1000e
 */

/**
 * Fix: #49532, #49533 
 * Dsc: Turn on/off the leds of the phy RTL8211E with e1000 NIC
 */

/**
 * Dec: Switch the AHCI functions on/off at run time
 */

/**
 * Dec: Added argument "SataLedSpecial" to support special Sata LED/GPIO Setting.
 *      For RS2211, RS2211rp, RS2211rp+, and RS3611rp+ only.
 */

/**
 * Dsc: Read MAC Address from bootloader or flash
 *
 * Fix: #52055
 * Dsc: Pass vender file format version from grub.
 *      So mantool knows which vender version is used by the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_vender_format_version
 */

/**
 * Fix: #52055
 * Dsc: The max number of internal NICs supported
 *      in the vender file
 */
#define SYNO_MAC_MAX_V2 8

/**
 * Dsc: Enable use sysctl to set the value of SynoDebugFlag. We
 *      can use it to be a flag the turn on printk or do other
 *      debug actions.
 *
 *      To set the SynoDebugFlag:
 *
 *      $ sysctl -w kernel.syno_debug_flag=1
 * IN : mm/memory.c, lib/synolib/synocrond.c,
 *      lib/synolib/syno_process_name_get.c, kernel/sysctl.c,
 *      kernel/fork.c, include/linux/synolib.h, fs/open.c,
 *      fs/stat.c, fs/ext4/super.c, fs/ext4/super.c, arch/x86/ia32/sys_ia32.c
 * 		
 */

/**
 * Dsc: Support for serial number stored in vender partition
 */

/*
 * Dsc: Pass size of flash memory from uboot or other boot loader.
 *		The default value is 4MB in 88f628x platform.
 *      So user mode can get the this information by using the
 *      following command:
 *    $ cat /proc/sys/kernel/syno_flash_mem_size
 *
 */
#ifdef CONFIG_SYNO_MV88F6281
#define SYNO_FLASH_MEMORY_SIZE
#endif

/**
 * Dsc: Pass hardware version from uboot or other boot loader for factory purpose.
 *      There are two parameters need to pass - syno_usb_fast_reset and syno_disable_usb3.
 *      The Armada370 builds in the USB drivers , so we can only pass the parameters before launching the kernel.
 *      So whether the USB drivers are build-in or not , we use the same way - pass parameters by uboot or grub.
 *    $ cat /proc/sys/kernel/syno_usb_fast_reset
 *    $ cat /proc/sys/kernel/syno_disable_usb3
 *
 * MY_ABC_HERE :
 *    in factory test, some flashs do not response sometimes,
 *    and the original timeout is 30/60s(SD_TIMEOUT), it is too long for factory test.
 *    So let the timeout as 3s for factory test.
 *    IN. block/blk-timeout.c, drivers/usb/host/xhci.c
 *
 * MY_ABC_HERE :
 *    for factory test, disable usb3, only usb2
 */

/**
 * Dsc: Let kernel knows the DS is booting from default boot device or not.
 *	$ cat /proc/sys/kernel/syno_detect_error_boot
 *	NULL: DS is booting from default boot device(/dev/synoboot2)
 *	auto: DS is not booting from default boot device due to something wrong
 *	NULL: DS is not booting from default boot device due to manually selection
 */

/******************************* MTD Driver ***************************************/
/**
 * Dsc: Capability for modifying partition information and FIS content in flash.
 */
#define __SYNO_MTD_INFO__

/**
 * Dsc: add mtd->lock and mtd->unlock function
 */

/**
 * Dsc: Malloc before mtd write.
 * Dep: MY_ABC_HERE
 */

/**
 * Dsc: For Synology flash. While parsing redboot fis directory, can not sort by
 *      mtd partition starting address. Should keeps the order in fis directory,
 *      ie, ppcboot/redboot maps to mtd0, zImage maps to mtd1.
 */

/******************************* Serial Driver ************************************/
/**
 * Dsc: Support for directly accessing the serial ttys device. 
 *      We use syno_ttys_write() to command uP (/dev/ttyS1) in scemd/synobios 
 *      to prevent breaking disk hibernation because it will bypass the vfs layer.
 */

/**
 * Dsc:
 *   1.In pinview, com1(ttyS0) is used to control microp, com2(ttyS1) is
 *     console debug port. Other platforms/models are reversed.
 *   2. This define let pineview can output to console
*/

/** 
 * Fix: DSM #14938 
 * Dsc:
 *   When poweroff/reboot, busybox will one: send SIGTERM, two: unmount
 *     fs, three: poweroff/reboot
 *   For one, uart1 will be closed, and after that, we can never ctrl microp.
 *     So we should avoid uart1 be closed(serial_core.c/uart_close).
 *   For two, we can only write register directly, but not write cmd
 *     to /dev/ttyS0.
 *   In three,kernel will shutdown all device driver first, so we should
 *     write register before that(kerenl/sys.c).
 */

/**
 * Fix: DS2.0 #14368, #14321
 * Dsc:
 *  2.6.32 kernel ttyS1 driver tty->ops->put_char (will call uart_put_char)
 *  seems not write immediately, just write to the buffer.
 *  So the behavior is not we want, we use tty->ops->write 
 *  instead of tty->ops->put_char in MicroP case (ttyS1)
 * IN: drivers/char/tty_io.c 
 */

/**
 * Dsc:
 *  Export symbol of syno_test_list for synobios.
 * IN: kernel/sysctl.c
 */

/**
 * Dsc:
 *  Handle the result from ttyS1 in synobios.
 * IN: drivers/tty/serial/8250.c
 */

/**
 * Dsc:
 *  We add new protection function in uP 1829.
 *  Since the prefix of protection command is not '-',
 *    we do not add '-' prefix in this case.
 *  Depend on MY_ABC_HERE
 * IN: drivers/tty/tty_io.c
 */

/******************************* Network Driver ***********************************/
/**
 * Dsc: Add WOL support to Marvell BSP net driver.
 */

/**
 * Dsc: Add RGMII capability/setting to Freescale TSEC(Gianfar) driver.
 */

/**
 * Dsc: change MgmtClk in MIIMCFG from 7 to 3
 * 		14.5.3.6.6 MII Management Configuration Register (MIIMCFG) 
 */

/**
 * Fix: LKP2.6.32 #12, #211
 * Dsc: We only have one network interface, there is no need to have atalk
 * 		routing. If we don't do this, when appletalk zone range bigger than
 * 		4096, the kernel will not enable appletalk at all. If we enlarge the
 * 		limit zone range, it would take a long long time to start atalkd.
 */

/**
 * Dsc: Fix marvell 8001 network chip bug. The rx and tx checksum field is swapped.
 *      Affected Models: <ppc824x>, <ppc853x:DS109+, DS209+, DS409+>
 */

/**
 * Dsc: Fix Marvell 88E8001 driver link state bug. Set carrier state after
 *      netdev is registered so userspace can correctly get link status by
 *      checking "RUNNING" state of interface.
 */

/**
 * Dsc: Fix 853x, 854x gianfar driver link state bug. Set carrier state after
 *      netdev is registered so userspace can correctly get link status by
 *      checking "RUNNING" state of interface.
 */

/**
 * Dsc: Fix marvell 8071 network chip bug. The rx and tx checksum field is swapped.
 *      Affected Models: <mv6281:DS110j, DS210j>
 */

/**
 * Fix: #1037
 * Dsc: change sk98lin's blinking behavior.
 */

/**
 * Fix: #9579
 * Dsc: change mv8071's blinking behavior
 */

/**
 * Fix: #10984
 * Dsc: On pineview platform, some rx_missed_errors are reported
 *      during stressing. That is because the NAPI buffer is not
 *      sufficient between polling. Thus we enlarge the napi weight
 *      from 64 to 128.
 */

/**
 * Fix: #14746
 * Dsc: the ethtool always report e1000e's wol being not supported
 *      this fixes the problem.
 *	x86 platforms do not need to enable this definition,
 *	853x platforms needs this definition to make wol function
 *	     work.
 */

/* Fix: DS2.0 #11508, LKP2.6.32 #64
 * Dsc: remove some useless debug message
 */

/**
 * Fix: no bug entry
 * Dsc: switch net device name to collocate with hardware design
 */
#if defined(CONFIG_SYNO_MPC854X) || defined(MY_ABC_HERE) || defined(MY_DEF_HERE) || defined(CONFIG_ARCH_FEROCEON)

#ifdef MY_ABC_HERE
#define SYNO_MAX_SWITCHABLE_NET_DEVICE 8
#define SYNO_NET_DEVICE_ENCODING_LENGTH 6
#endif  /* MY_ABC_HERE */
#endif

/**
 * Fix: DSM #30328
 * Dsc: Fix MPC854x ERRATA eTSEC #79:
 *      Generation of Ethernet pause frames may cause Tx lockup and false BD close
 * Dsc: Fix MPC854x ERRATA eTSEC #49:
 *      Tx IP and TCP/UDP Checksum Generation not supported for some Tx FCB offsets
*/

/**
 * Fix: DS2.0 #4712, DS2.0 #4713, LKP2.6.32 #162
 * Dsc: if network cable is not plugged in, system
 *      will try slower speed to detect link. However, we
 *      should set link status to "off" and speed to "0" when
 *      autoneg state is timeout to let upper application to
 *      know "link is not available"
 */
#ifdef CONFIG_SYNO_MPC85XX_COMMON
#define SYNO_NET_PHY_NOLINK_SPEED_INIT
#endif

/**
 * Dsc: 6281 has MTU issue when MTU larger than 1600. This fix that.
 */
#ifdef CONFIG_MACH_SYNOLOGY_6281
#define SYNO_6281_MTU_WA
#endif

/**
 * Dsc: porting BONDING from kernel 2.6.24 to 2.6.32,
 *      Bonding feature with a new name here.
 */
/**
 * Fix: DSM #20710
 * Dsc: Patch to fix bonding on NIC drivers using page-based sk_buff.
 *      Namely ixgbe.
 * Ref: linux-2.6:
 *      commit ab12811c89e88f2e66746790b1fe4469ccb7bdd9
 *      bonding: correctly process non-linear skbs
 */

/**
 * Dsc: change DAD default behavior to meet RFC 4862
 * 		ref: linux-2.6.git commit 1b34be74cbf18f5d58cc85c7c4afcd9f7d74accd
 */

/**
 * Fix: DS3.0 #14939
 * Dsc: remove scope id check while the address is a local link.
 * Note: this violates the ipv6 standard and may cause problems in the future.
 */

/**
 * Fix: DSM 4.1 #34953
 * Dsc: HP SFP+ DA cables often do not fill correct values in EEPROM.
 *      Force driver to use cable as passive DA ones if cable_tech and
 *      10g/1g_comp_codes are all zero.
 */

/**
 * Fix: DSM 5.1 #54965
 * Dsc: Notify user when an unsupported SFP+ module inserted.
 *		Add /proc/driver/syno_unsupported_sfp_notify to communicate between
 *		kernel space and user space.
 */

/**
 * Fix: DSM 4.1 #39256
 * Dsc: The DS will hang when doing MultiLan_stress test with X540 T2 10G card.
 *      The root cause is everytime in mtu setup, X540 T2 will call function ixgbe_reinit_locked.
 *      ixgbe_reinit_locked will bring down ethernet device and bring it up again.
 *      And at this moment, it is probably that the ixgbe_service_task is undergoing.
 *      And there are some dangerous actions such as IXBGE_WRITE_REG in ixgbe_service_task.
 *      So the ixgbe_service_task should be locked to protect its actions from ixgbe_reinit_locked to prevent system deadlock.
 */

/**
 * Fix: DSM #35105
 * Dsc: Between lk 2.6.32 & 3.2 ixgbe was refactored to use interval
 *      instead of frequency in its interrupt moderation functions.
 *      Although the math was correctly converted, the new math
 *      combined with extreme small interval values will make the math
 *      biased toward low-latency setting. This caused suboptimal
 *      throughput performance.
 */

/**************************** BUG please fix it in the future ****************************/
/**
 * TODO
 * Dsc: for RFC 4862 after 2 hours timeout kill address
 *		because this scheme doesn't work over 110p, so modify jiffies
 */
#if defined(CONFIG_PPC_85xx)
#define SYNO_IPV6_110p_IPV6_READY
#endif

/******************************* USB Driver ***************************************/
/**
 * Dsc: hid ups will use user mode driver, so kernel hid module will not bind the hid ups 
 */

/**
 * Dsc: When keyboard or mouse plugged in, we will make it has static minor
 *      number from hiddev5.
 *      This is for our RF remote controller. The controller is keyboard+mouse.
 */

/**
 * Dsc: USB copy support
 *      use port number 99 to indicate USBCOPY port
 */
#define USBCOPY_PORT_LOCATION 99

/**
 * Dsc: When there is no serial in USB device, we will generate
 *      a serial from product. Futhermore, when product is empty also,
 *      we will generate a dummy name for it. If there are the same
 *      serial in other USB device, we will add number in the suffix.
 */

/**
 * Dsc: For USBIP project. Modify code for multiconnection.
 */

/**
 * Dsc: For Internal SD Cardreader only.
 */

#ifdef MY_ABC_HERE
#define SDCOPY_PORT_LOCATION 98
#endif
#if 0
/**
 * Dsc: This is a very dirty compatibility fix for USB compatibility with
 *      JMicron USB chip (and others). We slow down its speed for more compatibility.
 */
#define SYNO_USB_STOR_COMP_ENHANCE
#endif

/**
 * Dsc : Extract the part of extra delay from the SYNO_USB_STOR_COMP_ENHANCE
 *       Make it a general slow down mechanism of all USB storages
 */

#if 0
/**
 * Dsc:
 */
#endif

/**
 * Fix: DSM #27097
 * Dsc: during poweroff, sometimes after disable device,
 * khubd want to handle connection, then null access
 */

/**
 * Fix : DSM #39549
 * Dsc : during backuping , some devices will be ejected
 */

#if 0
/**
 * Dsc: fix xhci compatibility problem
 */
#define SYNO_USB3_TIMEOUT
#endif
#if 0
#define SYNO_USB3_RESET_RETRY
#define SYNO_USB3_STALL_WAIT
#endif
/**
 * Dsc: move some warning messages to xhci_dbg
 */

/**
 * Fix: DSM #27872, #44551 can not detect WD passport/element on NEC
 * Dsc: check mapping port status when needed
 */

#if 0
/**
 * Dsc: add more debug message for usb3 connection
 */
#define SYNO_USB3_DEBUG

/**
 * Fix: DSM #27872, can not detect WD passport
 * Dsc: create another xhci monitor for error handle (polling xhci port status, not interrupt like khubd),
 *        and  check mapping port status when needed
 */
#define SYNO_USB3_ERR_MONITOR
#endif

#if 0
/**
 * Fix: DSM #26764, usb3 flash (Innostor) speed is not super after reboot
 * Dsc: try to do special reboot at boot
 */
#define SYNO_USB3_SPECIAL_RESET
#endif

/**
 * Fix: DSM #52549 , #50493 , re-enable the special reset mechanism.
 * Dsc: Since define SYNO_USB3_SPECIAL_RESET is a wide-range fix , we only use part of it.
 *      So we name it as a lightweight version.
 */

#if 0
/**
 * Fix: DSM #28178, Transcend 640G reboot issue
 * Dsc: do reset if set address error
 */
#define SYNO_USB3_RESET_FOR_ADDR_ERR
#endif
/**
 * Dsc: usb3 pci id define
 */

/**
 * Dsc: some ups needs more time during address set
 */

/**
 * Fix: DSM #38346, CyberSlim dock USB_STOR_TRANSPORT_ERROR issue
 * Dsc: Limit the MAX_BURST to static 1 , cause this device's responce is slow
 */

/*
 * Fix: DSM #65734, TOTLINK N300UT USB Adapter causes system hang
 * Dsc: Give a default timeout value to a URB when its timeout value is set to 0
 *      This fix would avoid the infinite wait when URB has no response.
 */

/**
 * Fix <USB compatibility #461
 * Dsc: For some UPS devices which generate link violation or EMI through USB
 * cable lead USB host receiving port disconnect event or port disable event,
 * which can be annoying. This is workarounds which filter them on USB hub
 * driver.
 */

/**
 * Fix: <USB compatibility> #366, 461
 * Dsc: Add connect-debouncer which is to avoid USB disconnect during USB reset.
 */

/**
 * Some iStoragePro series (Vendor=0984 ProdID=1403 Rev= 2.13) have a bug with
 * SYNCHRONIZE_CACHE (a SCSI command), which they do not response their CSW to
 * the host (i.e. cannot finish the command) sometimes and then cause the USB-
 * storage driver reset them. Because USB resetting leads iStorages to launch
 * their "auto-lock", so SYNCHRONIZE_CACHE could cause their disconnection.
 */

/**
 * Dsc: prevent the SCSI command which is use for downgrading the Phison flash (
 *      VID-PID 13fe/5200) from modifying at SCSI layer, in the way to skip
 *      adjusting scsi_level value for the Phison flash.
 */

/**
 * Dsc: force large capacity (> 0xFFFFFFFF blocks) drives to use READ/WRITE(16)
 *      instead of READ/WRITE(10). Some(most/all?) USB enclosures do not like
 *      READ(10) commands when a large capacity drive is installed. This issue
 *      was reported and discussed.
 *      here: http://marc.info/?l=linux-usb&m=135247705222324
 */

/**
 * This is the collection of special dealing for USB device quirks
 */
/******************************* Compact DTV  ****************************************/
/**
 * Fix: Video Station #1218
 * Dsc: This flag is for the patch which handle ioctl:FE_SET_PROPERTY on 64 bit platform.
 */

/******************************* MD Driver ****************************************/
/** 
 * Fix: DSM #34979
 * Dsc: Add BLKFLSBUF, BLKROSET, RAID_VERSION ioctl cmd to white list
 */

/**
 * Fix: DSM #23753
 * Dsc: Wake up all md/lv which are in the same volume to speed up the responce time.
 */
#ifdef MY_ABC_HERE
#define CHECKINTERVAL (7UL*HZ)
#endif

/** 
 * Fix: DSM #19874
 * Dsc: Fix a null pointer access when reboot
 */

/** 
 * Fix: DSM 3 #18934
 * Dsc: Let our system can detect raid with 0.9 sb from others x86
 */

/** 
 * Fix: DS 2.0 #2215 #4541 #4542 #4674 #3294, LKP2.6.32 #76
 * Dsc: this define is used to notify raid that device has
 *      changed, usally is a driver hotplug event
 * IN : scsi_sysfs.c, md.c raid0.c raid1.c raid5.c
 *      include/linux/raid/md_k.h include/linux/raid/md.h
 */

/**
 * Fix: DS 2.0 #3046 #4286 #3063, LKP2.6.32 #70, #74
 * Dsc: this define is used to help SDK determind raid status. 
 *      In raid0, this define is used to consist mdstatus with
 *      other raid disk. When reboot, even if raid0 has problem,
 *      we must pretend it can be assemble
 * IN : md.c include/linux/raid/md_u.h raid0.c, raid1.c
 */

/**
 * Fix: DS2.0 #5798, DS2.0 #4438, LKP2.6.32 #77
 * Dsc: Let autorun md array from first disk. This is keep the 
 *      same as 2.6.15 with our modify Default is from 
 *      last disk. 
 * IN : md.c 
 */

/**
 * Fix: DS 2.0 #5799 #14433, LKP2.6.32 #69
 * Dsc: We add a new status in md for bad sector use
 * IN : md.c md_k.h raid0.c, raid1.c, raid5.c, raid5.h
 */

/**
 * Fix: DS 2.0 #5791, LKP2.6.32 #71
 * Dsc: Let raid read/write error can report to user through
 *      scemd and synobios
 * IN : synobios.c, md.c raid0.c, md.h, raid1.c, raid1.h
 */

/**
 * Fix: DS 2.0 #2453, #5835 
 * Dsc: This can enhance 10% write performance.
 * IN : raid5.c, raid5.h
 */
#ifdef MY_DEF_HERE
#else /* MY_DEF_HERE */
#endif /* MY_DEF_HERE */

/**
 * Fix: DSM4.0 #39585, #39586
 * Dsc: RAID5 may get wrong parity with "assume-clean," this fixes the issue.
 * IN : raid5.c
 */

/**
 * Fix: DS 2.0 #6373, LKP2.6.32 #125
 * Dsc: force starting dirty degraded raid 4/5/6 array. Please 
 *      refer linux-2.6.24/Documentation/md.txt
 *      Section: "Boot time assembly of degraded/dirty arrays"
 * IN : md.c
 */

/**
 * Fix: DS 2.0 #6961, #11857, LKP2.6.32 #99
 * Dsc: Do not assemble devices which derived from expansion box
 *      Do not assemble devices which is not belong to root devices
 * IN : md.c 
 */

/**
 * Fix: DS 2.0 #6995, LKP2.6.32 #75
 * Dsc: Assemble linear raid while we extend the hot_remove_disk
 * IN : md.c
 */

/**
 * Fix: DS 2.0 #7873, LKP2.6.32
 * Dsc: Support hotplug while reshape
 */

/**
 * Fix: #40586
 * Dsc: Add lock when disk partitions add to md autodetect list
 */

/**
 * Fix: #40965
 * Dsc: Sort the disk in autoastart array
 * */

/**
 * Fix: DSM #40563
 * Dsc: Fix infinite loop occur during raid5 reshape process
 */

/**
 * Fix: DSM #40639
 * Dsc: We will command user reboot fsck when ext4 error occur.
 *	In order to avoid too many errors lead filesystem crash.
 */

/**
 * Fix: DSM #45242
 * Dsc: To support SSD TRIM in our kernel(3.2.x), we still lack of 
 *      md layer's support, so back porting from kernel-3.7.
 */

/**
 * Fix: DSM #49643
 * Dsc: Currently our MD layer won't return errors in make_request() when the
 *  MD device is crashed. However, our flashcache Writeback mode uses RAID 1 SSD
 *  as cache. To handle the secound SSD failed case, it must be able to report the
 *  crash state of RAID 1 md device to upper layer. So we add this workaround in both
 *  dm-io layer and md raid1 layer.
 */

/**
 * Fix: DSM #50642
 * Enable Zram feature
 */

/**
 * Fix: DSM #46274
 * Dsc: When using SATA SSD on SAS model, the TRIM granularity value
 * is larger than our md chunk size. This causes raid0 / raid10 can't
 * do TRIM. So we correct TRIM granlarity if it's larger than md chuck
 * size, and define the md chunk size here in case it would be changed
 * some other day.
 */
#define SYNO_MD_CHUNK_SIZE 65536

/**
 * Dsc: Allow targets to change queue limits without underlying device
 *
 *      blk_dev_issue_discard will check queue limits to decides issue
 *      discard or not. Without this patch, blk_dev_issue_discard have
 *      no chance to send discard command to eplun.
 */

/**
 * Fix: DSM #44818
 * Dsc: expand volume fail due to get incorrect block size when e2fsprogs
 * call ioctl BLKGETSIZE64.
 */
#define SYNO_FIX_MD_RESIZE_BUSY_LOOP 5

/**
 * Fix: HA Dualhead #105
 * Dsc: We can use boot argument "root_uuid=" to specify the UUID of system raid(md0).
 *      And use "swap_uuid=" to specify the UUID of swap raid(md1).
 */

/**
 * Fix: DSM #58743
 * Dsc: We enable disable_force_rcw when starting sync, but we can only do
 *      RMW (Read Modify Write) if stripe is sync.
 *      So we back porting this logic from linux 3.10.x
 */
/**
 * FIX: DSM #69987
 * Dsc: We rename disable_force_rcw to enable_rmw.
 */

/**
 * Fix: #73835
 * Dsc: We can use this flag to turn on printk when riad sync check action finds mismatch sectors.
 */

/**
 * Fix: #80528
 * Dsc: Let md sync action log can be stored in /var/log/messages.
 */

/**
 * Fix: #86155
 * Dsc: Let md0 & md1 can do resync in parallel
 */

/******************************* SATA Driver **************************************/
/**
 * Fix: DSM #45516
 * Dsc: update diskstats for md device
 */

/**
 * Fix: DSM #45916
 * Dsc: /sys/class/ata_link/linkX/sata_spd will not shows
 * "6.0 Gbps" even the link speed of disk is SATA 6G.
 */

#if defined(MY_DEF_HERE)
/**
 * Fix: No Bug Entry
 * Dsc: added features to control the leds via ICH9
 */
#endif

/**
 * Fix: #39582 & #43388
 * Dsc: The original disk model name is only 16 characters.
 * 	But there is several disk's model name over 16 characters.
 * 	In this fix, we use ATA command "IDENTIFT DEVICE" to get whole model name and
 * 	increase disk model name size up to 24 characters.
 * 	If you want to scale the model length, you have to modify the definition of SYNO_DISK_MODEL_LEN
 * 	and SYNO_DISK_MODEL_NUM in the following files.
 * IN:  include/scsi/scsi.h b/include/scsi/scsi.h
 */

/**
 * Fix: #27837, #27954
 * Dsc: added features to switch the achi led on and off
 * Yet: kernel/sysctl.c include/linux/libata.h drivers/ata/ahci.c drivers/ata/libata-core.c
 */

/**
 * Fix: #22029, #22030, #22031
 * Dsc: Let internal/eunit disk can spinup simultaneity to speedup boot time.
 */

/**
 * Fix: #21684
 * Dsc: Force set some disk to 1.5Gbps in driver mode to enhance compatibility.
 * Disks:Hitachi HDS723020BLA642
 */

/**
 * Fix: #19706
 * Dsc: enlarge noise threshold to prevent recieve too many noise while normal stress.
 */

/**
 * Fix: #19052
 * Dsc: Let disk in blacklist cannot enable disk write cache and apply it during device starting
 */

/**
 * Fix: #18974, #18975, #18976
 * Dsc: Fix 3726 cannot detect hotplug event in all sata chips
 */

/**
 *
 * Dsc: Let 6281 soc and 7042 can control phy power
 */

/**
 * Fix: #18827, #19394
 * Dsc: Make 7042 can control phy gpio
 * IN : sata_mv.c
 */

/**
 * Fix: DS20 bug #10476
 * Dsc: Correct the vendor and model information showed in /proc/scsi/scsi
 * IN : libata-scsi.c
 */

/**
 * FIX: No Bug entry
 * Dsc: Allow user space to use ioctl() to get SATA hibernation status.
 * IN : libata-scsi.c
 */

/**
 *  Fix: DS20 bug #2345
 *  Dsc: add HDIO_GET_DMA for SCSI SATA
 *  IN : libata-scsi.c
 */

/**
 * Fix : DS20 bug #2165, #5608, #5786
 * Dsc : add for scsi-idle.patch
 *       We using ata command 0xe0 for implement hibernation.
 *       This may need a idel timer for others query.
 * IN :  usb/storage/usb.c, usb/storage/usb.h, include/linux/major.h, include/scsi/scsi_device.h
 *       scsi/sd.c, scsi/scsi_ioctl.c, scsi/scsi.c, block/scsi_ioctl.c
 */

/**
 * Fix: Related #14299, #14524 
 * Dsc: Prevent harddisks spin-up currently from standby
 *      mode. Add small amount of delay between each two disks
 *      so they do not consume too much power.
 * IN : mvLinuxIalLib.c, mvSata.c, mvSata.h, drivers/ata/libata-core.c,
 *      drivers/ata/libata-scsi.c, include/linux/libata.h, drivers/ata/libata-eh.c, drivers/ata/sata_mv.c,
 *      drivers/ata/libata-sff.c, kernel/sysctl.c
 */

/**
 * Fix: DS 2.0 #6006 
 * Dsc: get device index from scsi layer 
 * IN : synolib.h scsi_get_disk_index.c
 */

/**
 * Fix: DS 2.0 #8450
 * Dsc: implement bad sector auto remap in SATA layer
 * IN: drivers/ata/libata-eh.c drivers/md/md.c drivers/md/md.h
 *     drivers/scsi/scsi_sysfs.c drivers/scsi/sd.c fs/partitions/check.c
 *     include/linux/genhd.h include/scsi/scsi_device.h
 */

/**
 * Fix: DSM #23923
 * Dsc: Report LVM or MD sector which be auto remapped
 *      through scemd and synobios
 * IN : synobios.c
 */

/**
 * Fix: DS 2.0 #2577 #5929, LKP2.6.32 #79
 * Dsc: Let raid5 can re-write and read back again when build
 *      parity.
 *      Oringinal raid5 would not retry any filed reads while
 *      create a new raid5. But some disk really need this.
 * IN : raid5.c
 */

/**
 * Fix: No Bug entry
 * Dsc: when we unplug disk in 2.6.32, it may hang whole system.
 *      The reason is libata try to mirror taskfile between sata
 *      disk and chip shadow. But it does not exist such device.
 *      So it would hang.
 * IN:  drivers/ata/sata_sil.c
 */

/**
 * Fix : No Bug entry
 * Dsc : Make internal SATA disk use fixed device name. For example, the
 *       first channel is sda, the second is sdb, etc. All USB disk would
 *       start from sdq.
 * IN  : drivers/scsi/sd.c, drivers/usb/storage/scsiglue.c, 
 *       lib/idr.c, drivers/ata/libata-scsi.c,
 *       drivers/ata/ahci.c, drivers/ata/sata_sil24.c, 
 *       include/linux/libata.h, include/linux/syno.h,
 *       include/scsi/scsi_device.h, include/scsi/scsi_host.h
 */

#if	defined(MY_ABC_HERE) || defined(MY_ABC_HERE)
/**
 * Maximum SCSI internal disk. We will reserve device name for
 * internal disks.
 *
 * User mode "cardreaderd" would poll on external disk only.
 */
#if defined(MY_DEF_HERE) && defined(MY_DEF_HERE)
#define SYNO_MAX_INTERNAL_DISK 19
#else
#define SYNO_MAX_INTERNAL_DISK	15
#endif

/**
 * Fix : DSM #23229, #23277, #23278, 23280
 * Dsc : Check the bootcmd parameters for disk naming sequence reversing.
 *       The input parameters is an array of port numbers for each ata chip.
 *       The numbers stand for the number of ports from the first one that is
 *       to be reserved. 0 for not reserving the sequences, 1 is meaningless.
 * IN  : arch/arm/kernel/setup.c, arch/powerpc/kernel/setup_32.c, arch/x86/kernel/setup.c
 *       drivers/ata/libata-scsi.c, include/linux/libata.h, include/linux/syno.h
 *       kernel/sysctl.c
 */

#endif

/**
 * Fix : DS 3.0 #18789
 * Dsc : Reads Sata-Port-Mapping information and forces the 7042 Sata 
 *       Hosts to initialize specified number of ports. This makes the
 *       disk name not skip some characters.
 *
 *       Notice - Do NOT set the port number out of the range that [0-9].
 *                It supports as most 9 ports now, and 0 means start all
 *                ports that ATA host supports.
 * IN  : arch/x86/kernel/setup.c, drivers/ata/sata_mv.c, drivers/ata/libata-core.c
 *       include/linux/libata.h, kernel/sysctl.c
 */

/**
 * Fix : DS 2.0 #2308
 * Dsc : Make eSata could be detect quickly .
 * IN  : sata_sil.c
 */

/**
 * Fix : No Bug entry
 * Dsc : Make 2.6.32 phy ready change messages be the same with
 *       2.6.15. And make all sata driver has the same define.
 * IN  : sata_sil.c, sata_sil24.c, sata ahci.c, sata libata-core.c, sata libata.h
 */

/**
 * Fix: DS 2.0 #5857
 * Dsc: limit libata error retry time interval from 5 to 2
 *      second.
 * IN : libata-eh.c
 */
#ifdef MY_DEF_HERE
#else /* MY_DEF_HERE */
#endif /* MY_DEF_HERE */

/**
 * Fix: DS 2.0 #6820
 * Dsc: Provide some gpio function in Sysfs
 *      Power off scsi port. Driver should implement their own
 * 		power off method
 * IN : scsi_host.h, libata-scsi.c, thor/linux/linux_main.c,
 *      mvSata/mvLinuxIalHt.h, mvSata/mvLinuxIalHt.c,
 *      sata_sil24.c, scsi_sysfs.c, ata.h, synosata.h, libata.h,
 *      ata.h, libata-pmp.c, mvSata/mvIALCommonUtils.c,
 *      mvSata/mvIALCommon.c, mvSata/mvIALCommon.h, drivers/ata/libata-sff.c
 */

/**
 * Fix: DS 2.0 #4931, #8509
 * Dsc: Deny some command in SSD disks. Note that, this is not essentail
 * 		for those model who are not support power in sequence.
 *
 * 		So, 2.4 sereis models could ignore whole
 * 		SYNO_SATA_SSD_CMD_DENY define
 *
 * 		Because the biggest problem is in our spinup delay code.
 * 		Sometimes those ssd just cannot wake up normally. So you
 * 		would see lots of wake up from hibernate in the syslog.
 */
 
/**
 * Fix: DS 2.0 #6890
 * Dsc: Some disk could not probe with sata_sil24.c . The reason
 *      is they always encounter "SRST command error". So we
 *      retry SRST and insert a sata_std_hardrest before retry
 *      it.
 *
 *      Disks: 9611-HD-005(WD10EACS-00ZJB0),
 *      9704-HD-019(WD7500AACS)
 *
 *      We have many disks which have the same models as above,
 *      but they would not have the same problem.
 *
 *      Note. When you port this to newer kernel, please try to
 *      reproduce firstly. If it still that, and i suggest port
 *      this define. Otherwise, please don't port this.
 */

/**
 * Fix:  DSM #49102, #49180
 * Dsc:  Silicon Image 3132 may have ICRT ABRT errors while boot-up
 *       This is a workaround that decreases the frequency of such
 *       a issue's appearance.
 * File: drivers/ata/sata_sil24.c
 */

/**
 * Fix: DS 3.2 #26139
 * Dsc: Sending hotplug Event while inserting ebox with no disk.
 */

/**
 * Fix: DS 2.0 #7872
 * Dsc: Hotplug in Samsung disk in fan out port is not easy to
 *      probe. The only way is to force hardreset pmp link in
 *      hotplug disk, no matter what kind of disk hotplug in.
 *      Because we cannot recocnize what kind of disk be plugged
 *      in.
 *
 *      So we force hard reset pmp link while any disk is plug
 *      in.
 *
 *      Disks: SAMSUNG HD103UJ.
 *
 *      Note. This problem only happen in hotplug in SAMSUNG
 *      		HD103UJ
 */
/**
 *		This situation still found in kernel 2.6.32. We can solve
 *		this problem by increase retry time which has done in
 *		porting #47 MY_ABC_HERE.
 *		We still port this define for compatibility.
 *
 *		Commiter: Eric C.Y.Chang
 *
 */

/**
 * Fix: DS 2.0 # 7761
 * Dsc: Send ebox refresh event throught synobios to
 *      scemd for the ebox hotplug event.
 */

/**
 * Ref: LKP2.6.32 #182
 * Dsc: When plugged/unplugged disks, MV 7042 sata chip may missing IRQ,
 *      so disks can't be detected again. We find some workround in MV BSP:
 *      it didn't negotiated 1.5/3 G sata speed at first reset and also re-enable 
 *      interrupts, clear error whenn do hardware reset. So we back porting this 
 *      workaround.
 * IN   drivers/ata/sata_mv.c
 */

/**
 * Fix: [DSM] #22226, #22262
 * Dsc: Some sata chip (sil3132, 7042, 6281soc) apply horkage 1.5G,
 *      and then reset link, the speed will back to 3G. So we add
 *      some workround code on these chip drivers
 * In: drivers/ata/libata-core.c drivers/ata/sata_mv.c
 *     drivers/ata/sata_sil24.c include/linux/libata.h
 *     include/linux/syno.h
 * Parent: MY_ABC_HERE
 */

/**
 * Fix: DS 3.1 #19779
 * Dsc: 1.Drop IRQ requests from the ata ports offline,
 *        this prevents system hanging because that it
 *        cannot find correct data in the given address.
 *      2.When in deep sleep mode, we'll powoff disk, 
 *        we need off irq too
 * In: drivers/ata/libata-scsi.c drivers/ata/libata-eh.c 
 *	   drivers/ata/sata_mv.c drivers/ata/ahci.c 
 *	   drivers/ata/sata_sil24.c include/linux/libata.h 
 *	   drivers/scsi/sd.c include/scsi/scsi_ioctl.h 
 *	   include/linux/syno.h
 */
#if defined(MY_ABC_HERE) && defined(MY_ABC_HERE)
#if defined(MY_ABC_HERE) || defined(MY_DEF_HERE) || defined(CONFIG_SYNO_MV88F6281) || defined(SYNO_MARVELL_88F6281) || defined(MY_DEF_HERE) || defined(MY_DEF_HERE) || defined(MY_DEF_HERE) || defined(MY_DEF_HERE)
#define SYNO_MAX_SATA_ID 20
#define SYNO_PWRPIN_ENCODE_LEN 2
#define SYNO_PORT_SIGN 'N'
/* one item is Nxxxx */
#define SYNO_PWRPIN_ITEM_LEN 1 + SYNO_PWRPIN_ENCODE_LEN*2
#endif /* defined(MY_DEF_HERE) || defined(CONFIG_SYNO_MV88F6281) */
#endif /* defined(MY_ABC_HERE) && defined(MY_ABC_HERE) */

/**
 * Fix: DS 5.0 #66061
 * Dsc: We have enabled CONFIG_DETECT_HUNG_TASK for debuging HUNG task,
 *      but the softlock threshlod is too short (20s) that will cause false alarm call trace.
 *      The spinup delay of 4bay model may use 7*3=21s. So we extend it 40s.
 * In: kernel/watchdog.c
 */

/**
 * Fix: DSM #39224
 * Dsc: call trace (nobody care) shows out when shutdown sometimes.
 * We move shutdown function call into their own .shutdown function.
 */

/* Fix: DSM #27745
 * Dsc: When pmp port can't read GSCR correctly, try
 *      generate a fake plugged interrupt to recover
 *      this port
 * In: drivers/ata/libata-eh.c, drivers/ata/libata-pmp.c, drivers/ata/sata_mv.c,
 *     include/linux/libata.h, include/linux/syno.h
 */

/* Fix: DSM #49789
 * Dsc: define the retry times in sata compatibility mechanism.
 */
#ifdef MY_ABC_HERE
#define SYNO_SATA_RETRY_TIMES 1
#endif

/* Fix: DSM #39234
 * Dsc: PM of SIL3132 can't reconfigue speed correctly.
 *      
 *      When reconfiguing speed, PM of SIL3132 doesn't 
 *      have PHY-off(DET=4h) mode. So we use RESET(DET=1h) 
 *      mode. After reconfiguing speed, need to write again
 *      after a 1ms delay. Otherwise the speed won't
 *      configue correctly.      
 */

/*
 * Fix: DSM #39849 #41692
 * Dsc: Intel 6G SSD (330,520) drop speed after hotplug on
 *      ahci and silicon image drivers.
 *
 *      We slove the problem by clear speed limit after EH,
 *      It works on silicon image drivers only. But it will
 *      cause recognition problem of HITACHI disks on sata_mv
 *      dirvers.
 *
 *      Therefore, we only clear speed limit on silicon image
 *      drivers.
 */

/**
 * Fix: DSM #44992
 * Dsc: Fix port-multiplier-related deadlock in ahci driver.
 *
 *		The problem happens when an UNC-error disk is plugged in
 *		mv9705 connected to mv9235, using ahci driver.
 *		Reading UNC sector on the disk will trigger deadlock as
 *		following path:
 *
 *		ahci_interrupt -> ahci_port_intr -> ahci_error_intr
 *		-> ata_link_online -> ... -> ata_exec_internal_sg
 */

/**
 * Fix: DS 2.0 # 8311
 * Dsc: SIL3132 cannot well communicate with a Hitachi hard
 *      disk which list below:
 *      Model Family:     Hitachi Travelstar 5K100 series
 *		Device Model:     HTS541040G9SA00
 *		Serial Number:    MPBB20X2GTZRKM
 *		Firmware Version: MB2OC40J
 *		User Capacity:    40,007,761,920 bytes
 *		ATA Version is:   6
 *      ATA Standard is:  ATA/ATAPI-6 T13 1410D revision 3a
 *
 *      We force the IPM and communication speed on this kind of
 *      disk. Let SIL3132 can play nicely with this disk.
 *
 *      This disk is taken from robenh.
 */

/**
 * Fix: DS 2.0 #7197
 * Dsc: Seagate Disk would not stagger spin up when we power on the ebox.
 *      If we do not reset pmp link first, those disk would not spin up after next
 *      time we reset pmp link.
 *
 *      So we force hard reset pmp link if we power on our ebox.
 *
 *      Disks: 9711-HD-012, 9711-HD-002, 9711-HD-003(ST380815AS),
 *      9704-HD-019(WD7500AACS). Other bigger size Seagate disk would also has this symptom
 *
 *      Note. This problem only happen in power on ebox. If the ebox has poweron already,
 *            It would not happen.
 */

/**
 * Fix: DS 2.2 #10983
 * Dsc: let pmp device send cable event to user space
 */

/**
 * Fix: DS 4.1 #21187 #21272
 * Dsc: wait for hotplug tasks done
 *  In: include/linux/libata.h, drivers/ata/libata-scsi.c, drivers/ata/libata-eh.c, drivers/ata/libata-core.c    
 */

/**
 * Let JMB could has the same behavior as other sat controller in 6281 platform
 * My test: JMB + pineview with the same kernel would not has the same problem.
 * (Can not probe DX5 when booting if the power of DX5is on)
 */
#ifdef CONFIG_SYNO_MV88F6281
#define SYNO_LIBATA_JMB_BEHAVIOR
#endif

/**
 * Fix: LKP2.6.32 #218
 * Dsc: In order to make LED static when disk present and blinking when
 *      disk active, we have to set the offset 0x104F0 bit 0-1
 *      to 0x00 and bit 2-3 to 1. See data sheet page 282 (Table
 *      232: GPIO port control register), this is for open source mv driver
 *      MY_ABC_HERE is for BSP MV sata driver
 * IN : sata_mv.c
 */

/**
 * Fix: DS 2.0 #14275, LKP2.6.32 #233
 * Dsc: When disks device revalidate fail, handle dev fail function
 *      didn't kick this dev off. This may cause raid in error state.
 *      (ex. Seems these disks are ok, and keep resync)
 *      So we add condition to kick these disks off. When handle device
 *      fail is because -EIO, we kick this device off
 * IN : drivers/ata/libata-eh.c
 */ 

/**
 * Dsc: fix if revalidate success, libata-eh still not retry flush 
 * IN : drivers/ata/libata-eh.c include/linux/libata.h 
 * Parent: SYNO_LIBATA_EH_UPGRADE
 */ 

/**
 * Dsc: let sata disk export its serial number 
 * IN : drivers/ata/libata-scsi.c drivers/ata/ahci.c
 * Parent: MY_ABC_HERE 
 * NOTE: I didn't porting this define to MV BSP driver, so if we use MV BSP driver later
 *       must porting this define to drivers/ata/mvSata_4_2_2
 */ 

/**
 * Dsc: Support internal hdd hotplug or not
 * IN : drivers/hwmon/syno_hddmon.c arch/x86/kernel/setup.c kernel/sysctl.c
 */

/**
 * Dsc: Transfer scsi host number to disk name and export to sysfs
 * IN : include/linux/libata.h drivers/ata/sata_sil24.c drivers/ata/sata_mv.c
 *      drivers/ata/libata-scsi.c drivers/ata/libahci.c
 */
/**
 * Dsc: Enable MSI (Message-signaled Interrupt) of 88SX7042 (sata_mv driver)
 * IN : drivers/ata/sata_mv.c
 */

/**
 * Fix bug DSM #35336
 * Dsc: Fix the RAID5 Hang problem due to NeilBrown refactored code
 *      commit hash c4c1663be46b2ab94e59d3e0c583a8f6b188ff0c
 *      Revert the commit's semantic with this define.
 *      We need to trace the original problem that replacing the sh->lock with STRIPE_ACTIVE
 *      flag and the root cause.
 */

/**
 *  Dsc: Add a framework for SATA disk led control sys interface
 *		 If the function pointer has been hooked, then the sysfs of scsi disk will be able to set disk led
 *		 It will be helpful for product development when bring up
 */

/**
 * Fix: DSM #39839
 * Dsc: Add new SATA 6G chip (mv9235) and its workaround given by Marvell.
 *      The workaround is to solve hang problem when issuing SMART command.
 */

/**
 * Fix: DSM #43060
 * Dsc: mv9235 may fail when issue 2nd D2H in SRST, so we must check it at 2nd D2H
 */

/**
 *	Fix: DSM #46891
 *	Dsc: mv9235 has different gpio control machenism, so we add new function here
 */

/**
 *	Fix: DSM #47008
 *	Dsc: WD Red will link up 3.0 Gbps after hotplugging.
 *	The only thing we can do to fix it is to enforce it tries to link up with 6.0 Gbps
 */

/**
 * Fix: DSM #49926
 * Dsc: export disk sata error to user space through synobios and scemd
 */

/**
 * Fix: DSM #57897
 * Dsc: Kernel reports to userspace if kernel is handling disk error retry.
 * 	Because SCSI eh may hang DS for few minutes, so we should let user space
 * 	knows about that when kernel is doing eh.
 */

/**
 * Fix: DSM #64152
 * Dsc: Avoiding checksum error when the power of disk is short brake and write cache is enabled.
 * 	We need to send such event to userspace.
 */

/**
 * Fix: DSM #98375
 * Dsc: Add workarounds and limitations for Sil3132/3531
 *
 */

/******************************* File System **************************************/
/*
 * Fix: DSM #72565
 * Dsc: Use memory barrier to fix page writeback BUG_ON. We don't know
 *      exactly why it works but it passed our stress and the fix has no harm.
 */

/**
 * Fix: DSM #76547
 * Dsc: Btrfs may be run out of free chunk by data chunk
 *	We allocate metadata chunk in ratio if data chunk allocated.
 */

/**
 * Fix: DSM #77361
 * Dsc: Apply default setting of syno compression:
 *      Default compression method is lzo
 */

/**
 * Fix: DSM #77351
 * Dsc: Add an ioctl to set/get info of compressed file.
 *      Currently it only supports to get compressed size, uncompressed size and c flag.
*/

/**
 * Fix: DSM #77093
 * Dsc: Btrfs allow clone file between the share which is compressed or uncompressed.
 *      But we do not want a file compressed if it is in an uncompressed share.
 *      It prevent file partly compressed through file clone.
 */

/*
 * Fix: DSM #76391
 * Dsc: Force umount an error Btrfs volume
 */

/**
 * Fix: DSM #75057
 * Dsc: Use big block group to reduce mount time on big volume. It
 *      will be applied only on volumes who have size larger than 1T.
 */

/**
 * Fix: DSM #73071
 * Dsc: Clear space full flag after transaction committed
 */

/**
 * Fix: DSM #73071
 * Dsc: Chunk allocation may fail if device tree has hole
 */

/**
 * Fix: DSM #72842
 * Dsc: Btrfs may deadlock on block allocation and statfs. Because statfs
 *	use wrong spinlock to protect block group list.
 *	see also:80eb234a
 */

/**
* Fix: DSM #71807
* Dsc: Fail to rename readonly subvol
*/

/**
 * Fix: DSM #71707
 * Dsc: Btrfs not allow clone file between the folder which is datacow or nodatacow.
 *      It prevent file partly checksummed through file clone.
 *      In fact, it could be clone if dst is fully clone.
 *      see also:0e7b824c
 */

/**
 * Fix: DSM #71328
 * Dsc: Fix NOSPC when delete unused block group
 */

/**
 * Fix: FS Snapshot #298
 * Dsc: Reserve meta block to suppress problem of extent tree loop
 */

/**
 * Fix: FS Snapshot #303
 * Dsc: It could modify the content of page in user space under async direct io.
 *      User may change the data before btrfs cksum, and it will show csum failed.
 *      We disable async if it is btrfs direct io.
 */

/**
 * Fix: DSM #69930
 * Dsc: Before the fix, it will deadlock in rm with ecryptfs on btrfs.
 *      We avoid search extent_state again while evict inode to skip unnecessary split extent_state.
 */

/**
 * Fix: DSM #69252, FS Snapshot #271
 * Dsc: It is hang after MY_ABC_HERE fixed seldom. This define revert delayed_delete_inode.
 *      see also: 67de1176.
 */

/**
 * Fix: FS Snapshot #271
 * Dsc: btrfs has two mech to enhance unlink performance, tree logs and delayed_delete_inode.
 *      It will deadlock at unlink_inode and sync_log.
 *      To prvent deadlock, we pin the log writer at unlink_inode, and sync_log will wait for it.
 *      see also: 12fcfd22.
 */

/**
 * Fix: FS Snapshot #262
 * Dsc: Add debug log for #262. The log should be remove if it is pass the stress. 
 */

/**
 * Fix: FS Snapshot #245
 * Dsc: Add nr_cached_objects, free_cached_objects hook functions to free extent_map.
 */

/**
 * Fix: FS Snapshot #248
 * Dsc: flush-btrfs-X will stuck in balance_dirty_pages(). It may be fixed in new kernel.
 * We can pass it safely because page will be balance every command.
 */

/**
 * Fix: FS Snapshot #174
 * Dsc: Because of btrfs metadata delayed allocation,
 * space_info may keep pinned data too much. It will strictly make overcommit check failed.
 */

/**
 * Fix: FS Snapshot #243
 * Dsc: Btrfs may not drop all of its ref record in qgroup when deleting snapshots,
 *	thus hit FS Snapshot #181. This workaround remove the qgroup item if the
 *	corresponding snapshot was deleted, and pass the check in FS Snapshot #181.
 *	Revert this commit if (1) The qgroup removal is implemented in upstream and
 *	(2) We can correctly drop all ref records of qgroup when deleting snapshots.
 */

/**
 * Fix: FS Snapshot #110
 * Dsc: In btrfs, ordered extent will keep in memory via delayed allocation.
 *	It may triger oom if it is keeped too much.
 */

/**
 * Fix: FS Snapshot #182
 * Dsc: Speed up qgroup accounting in the situation that a file is cloned or snapshoted many times.
 *	We scacrifice exclusive refs and hierarchical qgroup for the speed up.
 */

/**
 * Fix: FS Snapshot #150
 * Dsc: In Btrfs, the default action when facing a unrepairable data checksum error is return -EIO.
 *	We change it to error continue and notify system via synobios and scemd.
 */

/**
 * Fix: FS Snapshot #171
 * Dsc: Fix memory leak for btrfs quota group.
 *	It will make page leakage while btrfs_clone_extent_buffer().
 */

/**
 * Fix: FS Snapshot #152
 * Dsc: BTRFS_IOC_CLONE didn't check quota
 */

/**
 * Fix: FS Snapshot #149
 * Dsc: In 3.15 patches, a261c7568f6f2a3927a202d2aabb4caa3f49743c.
 *	It will make btrfs hang on btrfs_end_io*(). It should be removed after btrfs upgrade.
 */

/**
 * Fix: FS Snapshot #165,#132
 * Dsc: Skip quota check for file operations 
 */

/**
 * Fix: FS Snapshot #156
 * Dsc: Fix wrong qgroup accounting due to invalid owner of extent.
 */

/**
 * Fix: FS Snapshot #158,#84
 * Dsc: 32-bit userspace on 64-bit cannot use FIEMAP, FIFREEZE, FITHAW ioctl commands on btrfs
 *      Add FS_IOC32_GETFLAGS, FS_IOC32_SETFLAGS, FS_IOC32_GETVERSION commands on btrfs.
 */

/**
 * Fix: FS Snapshot #90
 * Dsc: Let ioctl "BTRFS_IOC_RESIZE" support dry-run mode to query if a expand can be applied.
 */

/**
 * Fix: FS Snapshot #145
 * Dsc: In 3.15 patches, 0cb5320747cd177a1962c61bb039d3425698089b.
 *	It will make btrfs panic everywhere. It should be removed after btrfs upgrade.
 */

/**
 * Fix: FS Snapshot #88
 * Dsc: We should protect sub volume root before delete sub volume process done.
 *	Or it will be free by btrfs-cleaner.
 */

/**
 * Fix: FS Snapshot #121
 * Dsc: In 3.15 patches, 0cb5320747cd177a1962c61bb039d3425698089b.
 *	It is missing blk_finish_plug, and make plug mech BUG_ON.
 */

/**
 * Fix: FS Snapshot #82 #96
 * Dsc: The patch will trigger bug_on in nfs lanp2p stress,
 *	revert 3a0dfa6a12e4bb64a434426ecb17d4842092db5e.
 *	Btrfs: unset DCACHE_DISCONNECTED when mounting default subvol
 *	This define should be removed if open source fix it.
 */

/**
 * Fix: FS Snapshot #79
 * Dsc: Btrfs drop extent will return the address of extent end.
 *      If there is no more extent to drop, it will return wrong address.
 */

/**
 * Fix: FS Snapshot #40
 * Dsc: Add hide flag to subvolume. When this flag is set, subvolume will hide
 *      from readdir.
 */

/*
 * <FS Snapshot> #267, #265
 *
 * enable btrfs send/receive to run on ds share
 */

/**
 * Fix: DSM #47400
 * Dsc: Back port btrfs from 3.11 to 3.2
 */

/**
 * Fix: DSM #71524
 * Dec: Fix btrfs subvolume quota reserved not freed, should be revert if open
 *      source patch 'Btrfs: qgroup: free reserved in exceeding quota' is ready.
 */

/**
 * Fix: DSM #73519
 * Dsc: When delayed allocation, file size may not update in some reason while file copy stress.
 *      We force update file size if the file is growing, even if the buffer is mark delay.
 */

/**
 * Fix: DSM #47657
 * Dsc: Don't journal symlink new page data.
 *      It may over-write someone's data block while
 *      journal recoverying if fs encounter abnormal shutdown.
 */

/**
 * Fix: DSM #44227
 * Dsc: do not add reserved blocks when reisze
 */

/**
 * Fix: DSM #44990
 * Dsc: change default lazyinit multiply from 10 to 2
 */

/**
 * Fix: DSM #43366
 * Dsc: modify lazyinit speed dynamically
 */

/**
 * Fix: DSM #42089
 * Dsc: export lazy init progress to sysfs
 */

/**
 * Fix: DSM #73519
 * Dsc: It is modified from the two patches. If the patches back porting, we should remove this define.
 *      90e775b71a ext4: fix lost truncate due to race with writeback
 *      622cad1325 ext4: move ext4_update_i_disksize() into mpage_map_and_submit_extent()
 */

/**
 * Fix: DSM #109900
 * Dsc: 1. Reserve and ignore dir csum fake entry at the end of each dirent block for preventing dir csum
 *         fake entry being misused by kerenl 3.x.
 *      2. Smooth jbd2 csum error handling
 *      3. Mount metadata_csum volume on kernel 3.x by ignoring metadata_csum feature
 */

/**
 * Fix: DSM #74413
 * Dsc: There is no protection for hfsplus data page. The page may be mark in use after the page is release.
 */

/**
 * Fix: DSM #68998
 * Dsc: hfsplus will try to update the attribute of parent brec even if it is empty.
 *      We skip update empty brec to prevent illegal memory write and hfsplus data corruption.
 */

/**
 * Fix: DSM #46710
 * Dsc: In caseless fs, hfsplus will create the new file/dir on old dentry with old name.
 *      But old name may not match with new name in case sensitive. We create it by new name.
 */

/**
 * Fix: DSM #46346
 * Dsc: Show hfsplus caseless information in "show option".
 */

/**
 * Fix: DSM #46407
 * Dsc: The action "set size" on hfsplus will zero all the blocks.
 *      We don't zero it if the original file is empty. It will make samba performance better.
 */

/**
 * Fix: DSM #41596
 * Dsc: HFSPLUS never check new file name length. We add it on the lookup.
 */

/**
 * Fix: DSM #42155
 * Dsc: HFSPLUS will make system panic if there is error. We make it read-only.
 */

/**
 * Fix: DSM #42155
 * Dsc: There is RSRC inode in hfsplus. It is not a common file but will be add to global inode space.
 * This bug is the RSRC inode ref count wrong. It will not add ref on the lookup process, but will dec
 * the ref count at the end. We add the ref count on lookup process.
 */

/**
 * Fix: DSM #109423
 * Dsc: hfsplus will assign create time from create_date to vfs inode structure.
 */

/**
 * Fix: DSM #136785
 * Dsc: hfsplus will retry to lookup NFC filename when lookup NFD fail.
 */

/**
 * Fix: DSM #38874 
 * Dsc: Take off archive bit, backup version, create time from 
 * struct stat. 
 */
/**
 * Fix bug #20845
 * There is online resize boundary with 16TB.  One problem is ioctl only reconizes _u32 input. The other is reserved GDT maximum limitation with 1024.
 * This fix will make it reconizes _u64, and break the maximum of GDT limitation to 8192.
 * 8192 limitation: Because of the maximum jbd2 transaction size is 8192 (the volume should more than 8G).
 */
#if defined(CONFIG_64BIT) || \
	(defined(MY_DEF_HERE) && defined(CONFIG_SYNO_FIX_RESIZE_16TB_IN_32BIT))
#define SYNO_RESIZE_INODE_SIZE_EXTEND
/**
 * META_BG support for online resize. It is also support flex_bg 
 * on online resize. Moreover, we needn't offline resize anymore
 * if we have flex_bg , meta_bg, and 64bit. We needn't reserve 
 * more reserved gdt, too. 
 */
#define SYNO_META_BG_PATCH
#ifdef SYNO_META_BG_PATCH
#define SYNO_META_BG_BACKUP_DESC_FIX
#endif
#define SYNO_KEEP_NO_FLEX_BG_RESIZE
#endif

/**
 * Dsc: A switch to turn on/off syno xattr handler.
 * Add syno xattr handler includes related functions.
 * Use "syno." for namespace.
 * Add ext3_xattr_syno_handler is the handler for ext3,
 * ext4_xattr_syno_handler is for ext4.
 */

#ifdef MY_ABC_HERE
/**
 * Dsc: Add syno archive version for backup. Each inode and 
 * superblock all keep a version info. Once a file or directory 
 * is modified, inode's version will be set to super block's 
 * version plus 1. Super block's version could be increased by
 * user program when complete a backup. With each inode's 
 * version comparing to backup's version, we could quickly find 
 * out modified files. May refer to MY_ABC_HERE.
 * Archive version shall supported by syno xattr.
 */
#ifdef MY_ABC_HERE
/**
 * Fix bug #39525 Add archive version ioctl to change the order
 * of superblock. This should be removed after DSM 5.0.
 */
#endif
#endif

/**
 * Fix bug #40578
 * Fix the inode number overflow of dirent overflow on the
 * volume which larger than 64TB.
 */

/**
 * Fix bug FS Snapshot #299
 * Before the fix, checking of symlink length on ecryptfs is depend on lower file system.
 * There is one more limition "PATH_MAX" on vfs.
 * Symlink length must check in ecryptfs, or it may be fail on lower file system, such as btrfs.
 */

/**
 * Fix bug #48821
 * Report error "syno_error_report" on show_options() while ecryptfs issue error on decryption.
 */

/**
 * Fix bug #14250
 * EcryptFs will print a lots error code if the lower has no space/quota.  Stop this.
 */

/**
 * Fix bug #38020
 * EcryptFs will print a lots error code if authority failed. 
 * Stop this. 
 */

/**
 * Fix bug #14281
 * Ext4 default mount option with journal_checksum.
 */

/**
 * When truncate, only write file metadata to lower, don't write file body
 */

/**
 * Fix bug #85515
 * Ecryptfs always initial lower file with read-write, except read-only file system,
 * even current process is reading. It will trigger apparmor warning that reading process
 * try to write. We skip security check on ecryptfs doing lower file initialization.
 */

/**
 * Dsc: Add two syscalls for encryptfs.  They could convert file
 * name from cipher to plaintext, and from plaintext to cipher. 
 * From plaintext to cipher, it needs only plaintext full 
 * pathname and return encrypt file name.  From cipher to 
 * plaintext, it needs both full encrypted pathname (not 
 * including plaintext part) and ecryptfs mount point path, then 
 * it will return plaintext full pathname.  This function should 
 * be called at ecryptfs mounted. 
 */

/**
 * Dsc: A switch to turn on/off our FAT modification.
 */
#ifdef MY_ABC_HERE
/**
 * Default mount fat with "flush".
 * It will flush data to disk ASAP.  User may remove the external device without umount.
 * It can protect data lose.
 */

/**
 * Fix: #3371
 * Dsc: All error handling we added for FAT should use this define
 *        1. Added a new error "ECORRUPT" for FAT. After FAT is panic,
 *            it will be mounted read-only and we will see "corrupt" in
 *            /proc/mounts.
 */

/**
 * Fix: DS20 bug #1978
 * Dsc: Load default NLS table for FAT if modules not found.
 */

/**
 * Fix: DS20 bug #2182
 * Dsc: Skip checking boot indicator while checking MS_DOS partion.
 */
#endif

/**
 * Fix: DS20 bug #5787
 * Dsc: Skip printing kernel warning message when buffer head
 *      isn't up to date.
 */

/**
 * Fix: DS 2.2 #11447 
 * Dsc: In oldalloc, it will allocate inode in the group whose 
 * free inode count fewer than average.  But it is approximate. 
 * In SMP, it will find that all group's inode count is equal 
 * to average, then fs couldn't find available group. We force 
 * it to find one available group. 
 */

/**
 * Fix: DS20 bug #2195
 * Dsc: Make Quota related functions more robust.
 *      - Quota function won't loop forever when system unmount
 *        a readonly volume.
 */

/**
 * Fix: DS20 bug #867
 * Dsc: Empty
 */

/**
 *  Ignore fsck needed warning
*/

/**
 * Fix: DS7.0 bug #113286
 * Dsc: Support syno compression to get compression status.
 */

/**
 * Dsc: Keep the created time of files/directories for Ext3. This 
 *      modify should sync with samba 
 */

/**
 * Fix: DS4.3 bug #45668
 * Dsc: Don't swap create time into disk if it is big endian machine.
 *      This define should be removed if powerpc/qoriq (behind SYNO_CREATE_TIME_SWAP_VERSION) not support.
 */
#if defined(CONFIG_SYNO_MPC8533) || defined(CONFIG_SYNO_QORIQ)
#ifdef MY_ABC_HERE
#define SYNO_CREATE_TIME_BIG_ENDIAN_SWAP
#ifdef SYNO_CREATE_TIME_BIG_ENDIAN_SWAP
#define SYNO_CREATE_TIME_SWAP_VERSION 3719
#endif
#endif
#endif

/**
 * Dsc: Archive bit support on Ext3 and also the samba archive,
 *      hidden, system bit on Ext3 This modify should sync with
 *      samba.
 */
#ifdef MY_ABC_HERE

/**
 * Fix: DSM #44005
 * Dsc: Add syscall for backup all acl archive bit.
 *      The syscall can backup all syno archive bit, too.
 */

/**
 * Dsc: Support ACL in ext4. 
 *      ACL depends on MY_ABC_HERE
 */

#if defined (F_CLEAR_ARCHIVE) || defined (F_SETSMB_ARCHIVE) || defined (F_SETSMB_HIDDEN) || \
	defined (F_SETSMB_SYSTEM) || defined (F_CLRSMB_ARCHIVE) || defined (F_CLRSMB_HIDDEN) || \
	defined (F_CLRSMB_SYSTEM) || defined (F_CLEAR_S3_ARCHIVE) || \
	defined (F_SETSMB_SPARSE) || defined (F_CLRSMB_SPARSE)
#error "Samba archive bit redefine."
#endif

#if defined(MY_ABC_HERE) || defined(CONFIG_FS_SYNO_ACL)
#if defined (F_CLRSMB_READONLY) || defined (F_SETSMB_READONLY) || \
	defined (F_CLRACL_INHERIT)  || defined (F_SETACL_INHERIT)  || \
	defined (F_CLRACL_OWNER_IS_GROUP) || defined (F_SETACL_OWNER_IS_GROUP)  || \
	defined (F_SETACL_SUPPORT) || defined (F_SETACL_SUPPORT)
#error "ACL archive bit redefine."
#endif /* ACL archive bit redefine. */
#endif /* MY_ABC_HERE */

#define SYNO_FCNTL_BASE             513
#define F_CLEAR_ARCHIVE             (SYNO_FCNTL_BASE + 0)
#define F_SETSMB_ARCHIVE            (SYNO_FCNTL_BASE + 1)
#define F_SETSMB_HIDDEN             (SYNO_FCNTL_BASE + 2)
#define F_SETSMB_SYSTEM             (SYNO_FCNTL_BASE + 3)
#define F_CLRSMB_ARCHIVE            (SYNO_FCNTL_BASE + 4)
#define F_CLRSMB_HIDDEN             (SYNO_FCNTL_BASE + 5)
#define F_CLRSMB_SYSTEM             (SYNO_FCNTL_BASE + 6)
#define F_CLEAR_S3_ARCHIVE          (SYNO_FCNTL_BASE + 7)

#ifdef MY_ABC_HERE
#define F_CLRSMB_READONLY           (SYNO_FCNTL_BASE + 8)
#define F_SETSMB_READONLY           (SYNO_FCNTL_BASE + 9)
#define F_CLRACL_INHERIT            (SYNO_FCNTL_BASE + 10)
#define F_SETACL_INHERIT            (SYNO_FCNTL_BASE + 11)
#define F_CLRACL_HAS_ACL            (SYNO_FCNTL_BASE + 12)
#define F_SETACL_HAS_ACL            (SYNO_FCNTL_BASE + 13)
#define F_CLRACL_SUPPORT            (SYNO_FCNTL_BASE + 14)
#define F_SETACL_SUPPORT            (SYNO_FCNTL_BASE + 15)
#define F_CLRACL_OWNER_IS_GROUP     (SYNO_FCNTL_BASE + 16)
#define F_SETACL_OWNER_IS_GROUP     (SYNO_FCNTL_BASE + 17)
#define F_SETSMB_SPARSE				(SYNO_FCNTL_BASE + 18)
#define F_CLRSMB_SPARSE				(SYNO_FCNTL_BASE + 19)
#define SYNO_FCNTL_LAST             F_CLRSMB_SPARSE
#else
#define F_SETSMB_SPARSE				(SYNO_FCNTL_BASE + 8)
#define F_CLRSMB_SPARSE				(SYNO_FCNTL_BASE + 9)

#define SYNO_FCNTL_LAST             F_CLRSMB_SPARSE
#endif /* MY_ABC_HERE */

#else
#undef CONFIG_EXT4_FS_SYNO_ACL
#undef CONFIG_FS_SYNO_ACL
#endif /* MY_ABC_HERE */
/**
 * Dsc: Let ext3/ext4/btrfs filesystem be case-insensitive.
 *      This modify should sync with Samba and e2fsprogs.
 */
#ifdef MY_ABC_HERE
/* It's max path string len of smb. we should sync it with smb.*/
#define SYNO_SMB_PSTRING_LEN 1024
#endif

/**
 * Fix: DS2.0 bug #14502
 * Dsc: Prevent possible dead-lock.
 */

/**
 * Dsc: recvfile syscall
 *      This modify should sync with samba
 */
#ifdef MY_ABC_HERE


#ifdef MY_ABC_HERE

/**
 * Fix bug #35302
 * Dsc: Fix volume deadlock on volume full.
 *      Check volume free space on the begining of recvfile, not on the begining of write_begin.
 *      Or it will do schedule out with some journal resource holding himself.
 */


/**
 * Fix bug #17810
 * Original write_begin will add inode to orphan list twice if write failed.  It is no problem in normal case.
 * But in recvfile.  It will call write_begin() 8 times, and journal credits are not enough.  It will hit ASSERT, then stock.
 * ext3/4 have the same case.
 * This part is the same with ext4_da_write_begin() now.
 * see also 1938a150.
 */

/**
 * Fix bug #25749
 * The "Native OS" in SMB packets sent by cifs.mount will be replaced with "Linux version 2.6.32".
 * However, we have to identify those packets to export @eaDir for such clients.
 * Therefore we change the Native OS to "Synology Linux version 2.6.32" for identification.
 */

#endif
#endif

/**
 * Fix bugs [DSM] #72690
 * In cifs find_writable_file(), it may re-use the file handler even if the handler has freed.
 * We re-init the pointer to prevent it. see also:2c0c2a08bed
 */

/**
 * Fix bugs [DSM] #29392
 * Force tree reconnect iocharset=utf8 to fix failed reconnecting to remote cifs share with non-ascii
 * share folder names
 */

/**
 * Fix bugs [DSM] #29931
 * Initialize fattr with "cf_nlink = 1" in cifs_dir_info_to_fattr. Without this, st_nlink for directory
 * will be zero in cifs filesystem.
 */

/** 
 * Fix: DS20 bug #8459 
 * Dsc: Hide mount option "oldalloc".
 */

/**
 * Fix: DS31 bug #25869
 * Dsc: Force UDF fs as caseless
 * FIXME We should reference MY_ABC_HERE to let dentry cache work,
 *       let it can use cache to find files
 */

/**
 * Fix: DSM 3.2 bug #27625
 * Dsc: Linear search of block groups in ext4's mballoc could cause
 * smbd to timeout when block groups are all full. Limit search
 * number and randomized them to do sparse search instead of linear
 * ones.
 */

/**
 * Fix: DSM 4.1 #35583 
 * Dsc: It will show warning call trace if file system keep
 * read-write on crashed raid. 
 */


/**
 * Fix: DSM 4.1 #36482
 * Dsc: Export symbol "do_fallocate" for UNMAP command.
 */

/**
 * Fix: DSM 4.1 #37988
 * Dsc: Export "syno_plugin" interface
 */

/**
 * Fix: DSM 4.1 #38963
 * Dsc: Force-mount /dev/root with "barrier=1"
 */

/**
 * Fix: DSM 4.1 #37011 
 * Dsc: It will show "Data will be lost" while ENOSPC in some 
 * environment (delayed allocation reserved blocks underflow in 
 * file copy stress). This patch is fixed by Brian Foster, but 
 * it is not applyed on linux. We should clean it up on next 
 * kernel merge. 
 */

/**
 * Fix: DSM 4.1 #38015
 * Dsc: Don't use rcu-walk before the bug "caseless stat
 * deadlock" solved.
 */

/**
 * Fix: DSM 6.1 #98542
 * Dsc: Add mount option 'relatime_period=N' to set update period of relatime to N days.
 *      The default update period is one day.
 */

/******************************* Crypto. ********************************************/

/**
 * Dsc: Patches from freescale BSP
 */

/**
 * Dsc: Talitos channel management has bug on it. This fix that problem.
 *      We let XOR engine can only use one channel. And others can free to select
 */

/**
 * Dsc: Some 8533E board cannot pass boot up crypto self test. 
 *      It makes me curious but we cannot reproduce it in our lab. 
 *      So i just workaround it. I had tested this in customer machine. Support #54591, #55370
 * 
 *      Please do not porting this, kernel has a new way to disable selftest. 
 *	    Just enable it rather than use this define in newer kernel.
 */

/**
 * Dsc: Let ocf framework use linux crypto api to offload task
 *      to hw engine for those crypto driver don't implement ocf
 *      support.
 */

/*
 * combine ecryptfs and ocf framework.
 * Only open this function when OCF framework is used.
*/

/**
 * Dsc: convert blkcipher to ablkcipher , let ecrpytfs can use
 *      both hardware accelerate and software.
 */

/**
 * Dsc: This fix the memory leak issues in ocf_20100325 when we only use 
 *      cryptosoft engine. 
 */

/**
 * Dsc: Performance tuning for mv628x.
 */

/**
 * Fix: DSM #75099
 * Dsc: 
 * 1. Avoid free already free irq.
 * 2. Check pCesaSAD[sid] before free it.
 * IN : arch/arm/plat-armada/mv_drivers_lsp/mv_cesa/cesa_ocf_drv.c
 *      arch/arm/plat-armada/mv_hal/cesa/mvCesa.c
 */ 

/******************************* Misc. ********************************************/
/**
 * Dsc: export lookup_hash() and kern_path_parent() for lio-4.0.
 */

/**
 * Dsc: emulate caculating of u64 remainder
 */

/**
 * Fix:
 * Dsc: Slow down hotplug event to prevent oom when plug a drive which has huge partitions
 */
#ifdef CONFIG_SYNO_MV88F6281_USBSTATION
#define SYNO_SLOW_DOWN_UEVENT
#endif


/**
 * Fix: DS 2.0 #5873
 * Dsc: limit handle_bad_sector print messages.
 * IN : block/blk-core.c
 */

/**
 * Fix: DS 4.2 #41812
 * Dsc: limit I/O error print messages.
 * IN : block/blk-core.c fs/buffer.c
 */

/*
 * Fix: DS2.0 #5828, LKP2.6.32 #149
 * Dsc: When MD encounters EIO errors, it will
 *      ask the SCSI layer if the device exists
 *      or not, to determine which error Handler
 *      will be used.
 * Fix: DSM #117222
 * Dsc: When MD force assemble with not enough devices,
 *      we set the MD to be Crashed Assemble and do not
 *      add it's event count.
 * IN : sd.c, md.h, md.c, linear.c,
 *      raid0.c, raid5.c, raid1.c, raid10.c,
 *      fs/ext3/balloc.c, fs/ext3/dir.c,
 *      fs/ext4/balloc.c fs/ext4/dir.c
 */

/**
 * Dsc: Increase default readahead size of block device
 *      from 128KB to 512KB
 */

/**
 * Fix: DSM #36968
 * Dsc: Kernel clear loop device call trace during reboot
 *
 */

/**
 * Fix: #16748
 * Dsc: CPU speed adjusting while hibernation
 */
#if defined(CONFIG_SYNO_MV88F6281) && !defined(CONFIG_SYNO_MV88F6281_USBSTATION)
#define SYNO_CPUFREQ_ADJUST
#endif

/**
 * Fix: #30927, #30928
 * Dsc: Force the 2nc CPU core and the logical core derived from the core being offline
 * IN : drivers/base/cpu.c
 */

/**
 * Fix: #59444
 * Dsc: Fix CVE-2014-0196 security exploit
 */

/**
 * Fix: #64075
 * Dsc: Fix CVE-2014-4699 ptrace/sysret security exploit
 */

/******************************* MV BSP ********************************************/
/**
 * Fix: No Bug Entry
 * Dsc: Marvell's default BSP is used for 2.6.22, but we use 2.6.24.
 *      This define use to indentify what we porting.
 *      Because there had a little difference betwenn these two major version linux.
 * IN : mvLinuxIalHt.c, mvLinuxIalLib.c, mvLinuxIalSmart.c, thor/linux/linux_helper.c, thor/linux/linux_sense.c, ahci.c
 */

/**
 * Fix: No Bug Entry
 * Dsc: We use 2.6.32, modify Marvell's BSP related code (defaule is 2.6.22)
 *      This define use to indentify what we porting.
 *      Because there had a little difference betwenn these two major version linux.
 * IN : drivers/ata/mvSata_4_2_2/mvLinuxIalLib.c, drivers/ata/mvSata_4_2_2/mvLinuxIalHt.c,
 *      drivers/ata/mvSata_4_2_2/mvLinuxIalSmart.c
 */

/**
 * Fix: No Bug Entry
 * Dsc: Make mvSata driver accept CHECK_POWER ATA command
 *      (via Marvell SMART interface).
 * IN : mvStorageDev.h, mvLinuxIalSmart.c
 */
/**
 * Fix: DS 2.0 #8357
 * Dsc: implement error handle for Marvell mvSata
 */

#ifdef MY_ABC_HERE
#define MAX_CHANNEL_RETRY       2
#define CHANNEL_RETRY_INTERVAL  (3*HZ)

/**
 * Fix: DS 2.2 #10983
 * Dsc: let pmp device send cable event to user space
 */
#endif

/**
 * Fix : DS20 bug #5838, #8213
 *
 * Dsc : Some disk can't go through SRST status, so we reset it
 *      and give it one chance for detect disk eg. WD5001ABYS,
 *      Samsung HD103UJ, ST3500641AS
 *
 *      #8213: chip: Sunplus SataLink SPIF225A-HF021 (LC Power
 *      EH-35BE2 esata box)
 */

/**
 * Fix: No Bug entry
 * Dsc: In order to make LED static when disk present and blinking when
 *      disk active, we have to set the offset 0x104F0 bit 0-1
 *      to 0x00 and bit 2-3 to 1. See data sheet page 282 (Table
 *      232: GPIO port control register), this is for MV BSP driver
 *      MY_ABC_HERE is for open source driver
 * IN : mvSata.c
 */

/**
 * Fix DS2.0 #8115
 * Dsc: The port multiplier function of mvSata4.2.2 based driver
 *      is not good for 6281. They have some problem:
 *      1. Some devices can not be reconized by 6281.(Much like
 *         a chip bug)
 *         9410-HD-001
 *      2. Hotplug multiple devices in the same times is not
 *         well maintained.
 *      3. They could only recognize four disks at most.
 *
 * FIXME: I do not try this patch in 7042 with port multiplier.
 *        Because when i fix this problem, it is still not merge
 *        all the 7042 driver in the same package yet.
 */

/**
 * Fix: DS 2.0 #5942
 * Dsc: Let 2.6.24/15 kernel could use the sil-3726 PM , port
 *      from 2.6.15/drivers/scsi/mv7042/mvIALCommonUtils.c. I
 *      think it may be a version control miss in marvell.
 * IN : mvIALCommonUtils.c
 */

/**
 * Fix: DS 2.0 #7123
 * Dsc: Fix Marvell driver's bug. enlarge the link fault
 *      tolerance
 * Test Disks Info:
 *
 *  Product of China
 *  Device Model:     ST31000340NS
 *  Serial Number:    5QJ0W2RJ
 *  Firmware Version: SN75 -> AN05
 *  P/N:              9CA158-333
 *  User Capacity:    1,000,204,886,016 bytes
 *  ATA Version is:   8
 *  ATA Standard is:  ATA-8-ACS revision 4
 *
 *  Product of Thailand
 *  Device Model:     ST31000340NS
 *  Serial Number:    9QJ1MGC4
 *  Firmware Version: SN05 -> AN05
 *  P/N:              9CA158-303
 *  User Capacity:    1,000,204,886,016 bytes
 *  ATA Version is:   8
 *  ATA Standard is:  ATA-8-ACS revision 4
 *
 *  Product of Thailand
 *  Device Model:     ST31000340NS
 *  Serial Number:    9QJ1J81V
 *  Firmware Version: SN05 -> AN05
 *  P/N:              9CA158-303
 *  User Capacity:    1,000,204,886,016 bytes
 *  ATA Version is:   8
 *  ATA Standard is:  ATA-8-ACS revision 4
 *
 *  Product of Thailand
 *  Device Model:     ST31000340NS
 *  Serial Number:    9QJ1ME10
 *  Firmware Version: SN05 -> AN05
 *  P/N:              9CA158-303
 *  User Capacity:    1,000,203,804,160 bytes
 *  ATA Version is:   8
 *  ATA Standard is:  ATA-8-ACS revision 4
 *
 * IN : mvSata.c
 */

#include <linux/syno_user.h>

#include <linux/syno_debug.h>

/**
 * Fix:	DS 2.0 #14452
 * Dsc:	Enlarge max write size of NFS for Vmware to 
 *    write 65536 bytes at once.
 * IN :	fs/nfsd/nfssvc.c
 */
#define SYNO_NFSD_WRITE_SIZE_MIN 131072

/**
* Fix: DSM #6585, #40483, #44152
* Dsc: Provide a interface for user to set the udp packet size they want
*/
#ifdef MY_ABC_HERE
#define SYNO_NFSD_UDP_MAX_PACKET_SIZE 32768
#define SYNO_NFSD_UDP_MIN_PACKET_SIZE 4096
#define SYNO_NFSD_UDP_DEF_PACKET_SIZE 8192
#endif

/**
 * Fix: DSM #55927
 * Dsc: Provide a interface for user to enable command "chmod" or not on ACL share
*/

/**
* Fix: DSM #50678,#50679
* Dsc: Silent rpc svc_printk messages, it refers to kernel commit 624ab464 to silent rpc debug messages.
* So if we update to kernel version v3.9-rc1, this defination can be removed.
*/

/**
 * Fix: DSM #45988 ipv6+NFSv4 can not pass clientid confirm
 * Dsc: Function rpc_cmp_addr(__rpc_cmp_addr6) will compare ipv6 scope id on kernel version 3.2.
 * However, the copy function __rpc_copy_addr6 do not copy scope id,
 * So the client can not pass clientid confirm cause server think client's address is not match.
 * Copy scope id on function __rpc_copy_addr6 to solve this issue
 * This define can be removed after apply patch 155a345 on linux kernel version 3.9
 *
 * IN: include/linux/sunrpc/clnt.h
 */

/**
 * Fix: DSM #46220 Disable NFSv4 over UDP
 * Dsc: According to RFC 3530
 * - Where an NFS version 4 implementation supports operation over the IP
 * - network protocol, the supported transports between NFS and IP MUST be
 * - among the IETF-approved congestion control transport protocols, which
 * - include TCP and SCTP.
 *
 * This define disable NFSv4 over UDP by
 * - 1. Do not register NFS version 4 UDP port to rpcbind on svc_register
 * - 2. Return nfserr_acces on nfsd4_access when client connect from UDP protocol
 *
 * IN: net/sunrpc/svc.c
 * IN: fs/nfsd/nfs4proc.c
 */

/**
 * Fix: DSM #44339 Hide system directories in NFS readdir
 * Dsc: Hide directories used by system. e.g. @eaDir, @tmp, @sharebin and .AppleDesktop.
 */

/**
 * Fix: DSM #92502 nfsd: Grant permission of administrators group to admin user
 * Dsc: Grant permission of administrators group to admin user
 */

/**
 *Fix: DSM #16952
 *Dsc: Modifies the MPP setting. This is used to switch
 *     the HDD leds off on DS211+
 */

/**
 * Fix: DSM #19665
 * Dsc: Add ECC notification support
 *		When ECC ram detect 1 bit error, it will correct this error automatically,
 *		but we still need a notification scheme let user know the error just occurred.
 */



/**
 * Fix: DSM #23148
 * Dsc: Make iSCSI device nodes to have prefix "ids"
 */
#ifdef MY_ABC_HERE
#define SYNO_SATA_DEVICE_PREFIX	   "sd"
#define SYNO_ISCSI_DEVICE_PREFIX   "isd"
#define SYNO_ISCSI_DEVICE_INDEX    (26 + 25 * 26)    // start from za

#if defined(MY_DEF_HERE) || defined(MY_DEF_HERE)
/* Micro SD is mapped to USB "4-4" */
#define SYNO_INTERNAL_MICROSD_NAME "4-4"
#endif /* MY_DEF_HERE */
#endif

/**
 * Fix: DSM #28156
 * Dsc: Upgrade compat-wireless v3.1.1
 *		New compat-wireless MAC80211 module need atomic64_t support,
 *		bug the config in linux-2.6.32 didn't add the atomic64 software emu
 *		in ARM arch.
 */
#if defined(CONFIG_SYNO_MV88F6281) || defined(SYNO_MARVELL_88F6180) || defined(SYNO_MARVELL_88F6281)
#define SYNO_ARM_GENERIC_ATOMIC64
#endif


#if defined(MY_DEF_HERE)
/**
 * Fix: Unable to hotplug phy in wide port
 * Dsc: When communication complete, the driver need to add phys to relative port or remove phys from it
 * Please refer to kernel git:7f6f794dee50ba33710145140f39de59f5ec764e
 * This commit number does the same thing as this fix, but this commit fail at removing phys
 * TODO: If LSI kernel driver fix this issue, then this fix can be removed
 */
#define SYNO_SAS_MPT2_HOTPLUG_PHY

/**
 * Space: SAS
 * Fix: Send hotplug phy in wide port uevent to userspace
 * Dsc: Since phys will be added into wide port, but the uevent will not be sent still.
 * So we add this fix to send add/remove phy to/from port to userspace
 */

/**
 * Space: SAS
 * Fix: Bring back removed enclosures when we replug upper link.
 * Dsc: When we unplug enclosures from the middle of the linking chain, all the following enclosures will be removed.
 * Then we replug the removed link, the host can only recover the first attached enclosure, and the others are still lost.
 * This is because that the host firmware still keep them but the driver already remove these enclosures.
 * The bug is caused by driver at function _scsih_expander_node_remove.
 * When we unplug the upper link, this function will remove all devices/enclosures behind this link.
 * Meanwhile, the driver is going to notify firmware to update its status.
 * But those enclosures have been removed in driver, and the firmware will not be notified.
 * So firmware keep those enclosures as well and send wrong message to driver when we replug this link.
 * The only thing we need to do is to buy enough time for firmware to update its status before removed
 * TODO: check remove when heavy accessing and fast hot plug to see if any side effect there
 */
#define SYNO_SAS_RECOVER_REMOVED_ENCS

/**
 * Space: SAS
 * Fix: Show phy info in kernel log when disk hotplug in
 * Dsc: Show phy info in kernel log when disk hotplug in. What we do is exactly the same as LSI kernel driver Phase11
 */
#define SYNO_SAS_SHOW_DISK_PHY_INFO

/**
 * Space: SAS
 * Fix: #40515
 * Dsc: Remove symbolic link on enclosure component before unregister it.
 *      If we remove these symbolic links when component release,
 *      we will trigger the warn on message because these sysfs structure has been removed in unregister stage
 */
#define SYNO_SAS_ENCLOSURE_POWEROFF_WARNON

/**
 * Space: SAS
 * Fix: Break SYNO FIXED DISK NAME rule in SAS model
 * Dsc: The SAS model will not be named as fixed position as before, e.g. sda -> disk1, sdb -> disk2.
 * SAS disk name will be named as sas1, sas2, sas3..., but the disk name is no longer mapping to any disk position
 */
#if defined(MY_ABC_HERE)
#define SYNO_SAS_DISK_NAME
#endif

#if defined(SYNO_SAS_DISK_NAME)
#define SYNO_SAS_USB_DEVICE_PREFIX		"usb"
#define SYNO_SAS_DEVICE_PREFIX			"sas"
#ifdef MY_ABC_HERE
#define SYNO_SAS_ISCSI_DEVICE_PREFIX	"iscsi"
#endif
#endif /* SYNO_SAS_DISK_NAME */

/**
 * Space : SAS
 * Fix: Light on/off disk present LED when a sas/sata disk is plugged in or pulled out
 * Dsc: On SAS model, the way to control disk LED is through SES protocol to set up expander phy status.
 * Then expander will output signal to CPLD to light on present/faulty LED.
 * Everytime a disk plugged in/pulled out, it will be attached to its parent enclosure and a link will be created.
 * So we light on/off the disk present LED at this moment.
 * This define works in drivers/misc/enclosure.c
 */
#define SYNO_SAS_DISK_LED_CONTROL

/** 
 * Fix: DSM #35222
 * Implement spinup delay queue in SCSI layer to limit
 * numbers of disks spun up concurrently.
 *
 * Define SYNO_SAS_SPINUP_DELAY_DEBUG to print debug
 * info on console.
 */
#define SYNO_SAS_SPINUP_DELAY

/**
 * Fix: DSM #62317
 * Export interface to control PCH GPIO for Banana Split
 * power control.
 */
#define SYNO_SAS_ENCOLURE_PWR_CTL

#endif /*MY_DEF_HERE */

/**
 *	Fix: DSM #57720
 *	When SG_IO is interrupted, there is possibility that it will corrupt any other process' memory and lead to core dump
 *
 *	Cherry-pick 9e101b2e099f9f61b8936f562cdecf8c35031cb2 and it needs define bio_for_each_segment_all
 */

/**
 * Fix: DSM #35518
 * Dsc: The driver/base/core.c had been refactored. This causes that in sysfs, the symbolic link to block device dissappears.
 * For example: in /sys/class/scsi_disk/1:0:0:0/device/, there should be a symbolic link named as block:sas1.
 * However, this symbolic link dissappears in linux-3.x, and in linux-2.6.32, it preserves.
 * Because in SAS model, we relay on this structure to parse our disk topology, we need it back.
 * After checking the kernel git log & linux-2.6.32 related codes, this symbolic link could preserve here without affecting other functions.
 * It reverts commit 39aba963d937edb20db7d9d93e6dda5d2adfdcdd partially
 */

/**
 * Fix: DSM #33143
 * Dsc: The dev->operstate are not well initialized when bonding created
 *
 *		In bonding, the dev->operstate is not initialized after dev_init. So we call default_operstate() to init this value.
 */

/*
 * Fix: DSM #35201
 * Dsc: if DS has Eunit power ctrl pin, Eunit supports zero watt sleep
 *
 */

/**
 * Fix: DSM #38013
 * Dsc: support EA on hfsplus fs module
 */

/**
 * Fix: DSM #43197
 * Dsc: fix the compile error caused by back porting 
 * hfsplus module of kernel 3.9
 * ** REMOVE this define will cause compile failure ! **
 */

/**
 * Fix: DSM #42868 - add DS114 model
 * Dsc: DS114 has turn EHCI hcd off and it will cause ehci init
 * hang. We need a kernel parameter to skip driver registering
 */

/*
 * Fix: DSM #43373
 * Dsc: Disable posix semantics for caseless remote mount
 */

/*
 * Fix bug #15588
 * Kernel native hfsplus has problem with multi-process write. We add the mutex for each write.
 * FIXME: We should make the lock smaller.
 */

/*
 * Fix: DSM #47001
 * Dsc: Force set qoirq esata port to sata 1.5G
 */

/**
 * Fix bugs [DSM] #46499, #26543, #26544
 * When upload a file with icon from mac to ds, and the destination on ds is a cifs mount point of
 * another mac share, the upload action fail in mac os 10.6.2, or lose ea in mac os 10.6.8/
 * The reason is that icon is store in 'icon\r', and '\r' will be conver by mac.
 * Therefore we change '/r' (0x0d) to (0xf00d).
 */

/**
 * Fix: DSM #12734
 * Dsc: Different platform get different value of 'initrd_end', some means 4M/8M from boot arguments,
 * some means real rd.gz size. Add this define to force quit loop after decompress rd.gz once.
 */



/**
 * Fix: DSM #49398
 * Dsd: sound_core triggers modprobe foe some modules, disable it because we don't have these
 */

/**
 * Fix <DSM> #49684, #49685
 * Linux-3.x uses cifs_strtoUCS to deal with log on, which is different with linux-2.6.x.
 * It causes LOGON_FAILURE when password contains '/'.
 */


/**
 * Fix <DSM> #50166
 * The class register wouldn't be cleaned after detach PM
 * In some situation, the port would be set ATA_DEV_NONE,
 * and this port would skip reset and lost connect.
 * We should cleanup the class register to ATA_DEV_UNKNOWN
 */

/*
 * Fix: DSM #49012, DSM #58739
 * Dsc: If the Eunit use port multiplier 3726/3826,
 *      we disable the link speed limit when pm attach
 */

/**
 *	For Dual Head, we need add a mechanism to warn unmodified HW control
 *	Add it here and remove when completed
 *	FIXME: Remove this define after vm bringing up
 */

/**
 * Fix <DSM> #52057
 * This define is for avoton platform gpio control
 * It separates from x64 gpio mechanism
 */
#ifdef MY_DEF_HERE
#define SYNO_LPC_ICH_GPIO_CTRL
#endif

/**
 * Fix <DSM> #54017
 * Dsd: Solve an issue that bdevname may assess released block_device and get Kernel OOPS
 * It happens when the block_device is released by ulock_rdev()
 */

/**
 * Fix <DSM> #55938
 *
 * Some disks have compatible issue in ICH sata port
 * We apply some workarounds for them
 */

/**
 * FIX <DSM> #58635
 *
 * uevent environment PHYSDEVPATH, PHYSDEVBUS
 * and PHYSDEVDRIVER is missing after disable
 * sysfs_deprecate config
 *
 */


/**
 * FIX <DSM> #58411
 * using boot-args enable mvsdio
 *
 */

/*
 * VMware NFS VAAI plug-in
 *
 * Extend the NFSv2 protocol
 */


/**
 * Apply apparmor patches obtained from apparmor userspace tool package v2.8.3.
 *
 * These patches are necessary to function correctly, but rejected by upstream.
 */

/**
 * FIX <DSM> #59974
 *
 * Disable phy led when deep sleep
 *
 */

/**
 * FIX <DSM> #81104
 *
 * Report resync status to user space
 *
 */

/**
 * FIX <DSM> #60268
 *
 * Add Sil3132 software HDD activity led
 *
 */

#ifdef MY_DEF_HERE
#define SYNO_ALPINE_TEMP_FIXME_PATCH
#define SYNO_ALPINE_ARCH
#define SYNO_ALPINE_SUPPORT_WOL
#define SYNO_ALPINE_SW_SATA_LED
#endif

/**
 * FIX <DSM> #63112
 *
 * For Avoton models with Sil3132 esata port
 *
 * We add some retry workaround to avoid linkspeed drop and HDD drop
 *
 */

/**
 * FIX <DSM> #62907
 *
 * Marvell MV9170 enable qc_defer with FBS and sata_syno_ahci_defer_cmd
 */

/**
 * Fix <DSM> #65257
 *
 * Remove error log when receiving RA
 */

/**
 * Fix <DSM> #66069
 *
 * Support 4KN target drives in flashcache
 */

/**
 * FIX <DSM> #63772
 *
 * When PM preform reset, the pm link 1 would reset immediately after pm host
 *
 * We should add delay to avoid reset fail
 */
#ifdef MY_DEF_HERE
#define SYNO_SATA_PM_FIRST_PORT_DELAY
#endif

/*
 * FIX <DSM> #65977
 *
 * Disable NCQ on Marvell 9170 for pmp Sil3826 handshake issue
 */

/**
 * FIX <DSM> #66202
 *
 * Marvell provide PCI Programming steps for 88SE9170 without SPI flash
 * to slove some compatibility issue.
 */

/**
 * Fix <DSM> #65071
 *
 * When umount -f for cifs mount. It will set status CifsExiting
 * And this status will always return ENODEV for any operation on other reuse CIFS mount point.
 * We should only set it when no other active mount point
 */

/**
 * Fix <DSM> #69876 (Support #348047)
 *
 * DS214play,DS415play NIC phy RTL8211E may somehow become unresponsive even link partner wants to
 * auto-negotiate with it. This fix add an entry in /proc/driver/e1000_phy_reset
 * to reset phy in user space
 */

/**
 * Fix <DSM> #72119
 *
 * Eunit with multiple PM would call SynoEunitFindMaster() to find the master PM
 * SynoEunitFindMaster() would call class_find_device() and making deadlock
 * We disable irq when SynoEunitFindMaster is running
 */
#if defined(MY_ABC_HERE) && defined(MY_DEF_HERE)
#define SYNO_EUNIT_DEADLOCK_FIX
#endif /* MY_ABC_HERE && MY_DEF_HERE */

/**
 * Fix <DSM> #73898
 *
 * Some SATA controllers return LBA registers even if the NCQ READ command failed.
 * These register values are not defined in ATA standard and cannot be trusted.
 * Passing these untrusted values to SCSI layer might cause in data lost due to
 * incorrect BIO completed-byte calculation.
 * This fix only target on UNC error and will return the preceded LBA setup of the
 * failed command like other SATA controllers do.
 */

/**
 * Fix <DSM> #76897, #74938
 * There is a race between reading and writing raid 5 layout config when reshaping.
 * When this happened, raid 5 used old layout to read logical address, and get wrong data.
 * It is a temporary read error, since after that specific time, raid 5 will use new layout to read.
 * But, it may cause some problems (e.g. file system error) if someone tries to write to that logical address.
 */

/**
 * Fix <DSM> #66390, #74706
 * There are two deadlock between raid5_start_reshape() and mddev_suspend().
 * For #66390, it's about suspend range and active_io count.
 * For #74706, it's about update superblock and active_io count.
 */

/**
 * Fix <DSM> #72011 & #107379
 * There is a deadlock between finish_reshape() and mount/umount.
 * It would happen when md calls finish_reshape() and waits for s_umount in sget() (cannot process any I/O now),
 * and mount is in processing holding s_umount and waiting for I/O call back.
 */

/**
 * Fix <DSM> #105242
 * There is a open source commit 82a301c fixing this bug.
 * However, the md flag has been refactored by several commits.
 * For DSM 6.2 release, we do not perform kernel upgrade.
 * We force event increased in starting and stopping array.
 */

/**
 * Fix <DSM> #106322
 * If we try to assemble raid1 only use the disk which is rebuilding, raid1 may
 * add and remove that disk repaetedly. We should check if raid1 is crash when
 * adding disk. If the raid is crash we should not add rebuilding disk because
 * we can't rebuild it.
 */

/**
 * Fix <DSM> #108102
 * Add sysfs interface to raid1.
*/

/**
 * Fix <DSM> #111235
 * Assign read target. If read error happens, return error and not retry to read
 * data from other disks.
*/

/**
 * Fix <DSM> #113769
 * If super block is not clean when assembling md, we don't do resync
 * automatically. Instead, we set '1' to sysfs file 'sb_not_clean' to record
 * that.
 *
*/

/**
 * Fix <DSM> #127298
 * We force update super block when run or stop md, this behavior will clean up
 * MD_FEATURE_RAID0_LAYOUT flag in feature map. Fix it by storing flag back into
 * feature map.
 *
*/

/**
 * Fix <DSM> #137053
 * Set MD_CHANGE_CLEAN bit to update md superblock at resync start to avoid
 * resync stop after abnormal shutdown.
*/


/**
 * Fix <PetaSpace> #16
 * Fix punch hole offset/len alignment PAGE_CACHE_SIZE.
 */

/**
 * Fix <DSM> #88994
 * Enahnce eCryptfs lookup/stat performance.
 * This patch store i_size in xattr, improve lookup and stat performance, avoid read from file.
 * This feature is enabled by default. Use the option no_fast_lookup to desable it.
 * When the lower filesystem does not support xattr, this feature will be auto disabled.
 */

/**
 * Fix <DSM> #99980
 * increase cifs kernel_sendmsg retry timeout 
 */

/**
 * Fix <DSM> #106349
 * Fix CIFS COVERITY
 */

/**
 *
 * Workaround for sata port miss issue after upgrading kernel to 3.2.101
 */

/**
 * Add syno load average to show cpu/io load average respectively
 * <DSM> #114759
 */

/**
 * Send synobios notification when oom killer is triggered
 * <DSM> #120036
 */

/**
 * Fix <DSM> #120123
 * If ecryptfs mount at the same mount point, it would get wrong stat at caseless stat API.
 */
#endif /* __SYNO_H_ */
